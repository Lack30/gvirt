// Copyright 2021 lack
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// This file was autogenerated by goproto-gen. Do not edit it manually!

syntax = 'proto2';

package github.com.lack_io.gvirt.spec;

// Package-wide variables from generator "generated".
option go_package = "spec";

// +gogo:genproto=true
message Caps {
  optional CapsHost host = 1;

  repeated CapsGuest guests = 2;
}

// +gogo:genproto=true
message CapsGuest {
  optional string osType = 1;

  optional CapsGuestArch arch = 2;

  optional CapsGuestFeatures features = 3;
}

// +gogo:genproto=true
message CapsGuestArch {
  optional string name = 1;

  optional string wordSize = 2;

  optional string emulator = 3;

  optional string loader = 4;

  repeated CapsGuestMachine machines = 5;

  repeated CapsGuestDomain domains = 6;
}

// +gogo:genproto=true
message CapsGuestDomain {
  optional string type = 1;

  optional string emulator = 2;

  repeated CapsGuestMachine machines = 3;
}

// +gogo:genproto=true
message CapsGuestFeatureACPI {
  optional string default = 1;

  optional string toggle = 2;
}

// +gogo:genproto=true
message CapsGuestFeatureAPIC {
  optional string default = 1;

  optional string toggle = 2;
}

// +gogo:genproto=true
message CapsGuestFeatureCPUSelection {
}

// +gogo:genproto=true
message CapsGuestFeatureDeviceBoot {
}

// +gogo:genproto=true
message CapsGuestFeatureDiskSnapshot {
  optional string default = 1;

  optional string toggle = 2;
}

// +gogo:genproto=true
message CapsGuestFeatureIA64BE {
}

// +gogo:genproto=true
message CapsGuestFeatureNonPAE {
}

// +gogo:genproto=true
message CapsGuestFeaturePAE {
}

// +gogo:genproto=true
message CapsGuestFeatures {
  optional CapsGuestFeatureCPUSelection cpuSelection = 1;

  optional CapsGuestFeatureDeviceBoot deviceBoot = 2;

  optional CapsGuestFeatureDiskSnapshot diskSnapshot = 3;

  optional CapsGuestFeaturePAE pae = 4;

  optional CapsGuestFeatureNonPAE nonPae = 5;

  optional CapsGuestFeatureAPIC apic = 6;

  optional CapsGuestFeatureACPI acpi = 7;

  optional CapsGuestFeatureIA64BE ia64_be = 8;
}

// +gogo:genproto=true
message CapsGuestMachine {
  optional string name = 1;

  optional int32 maxCpus = 2;

  optional string canonical = 3;
}

// +gogo:genproto=true
message CapsHost {
  optional string uuid = 1;

  optional CapsHostCPU cpu = 2;

  optional CapsHostPowerManagement powerManagement = 3;

  optional CapsHostIOMMU iommu = 4;

  optional CapsHostMigrationFeatures migrationFeatures = 5;

  optional CapsHostNUMATopology numa = 6;

  optional CapsHostCache cache = 7;

  optional CapsHostMemoryBandwidth memoryBandwidth = 8;

  repeated CapsHostSecModel secModel = 9;
}

// +gogo:genproto=true
message CapsHostCPU {
  optional string arch = 1;

  optional string model = 2;

  optional string vendor = 3;

  optional CapsHostCPUTopology topology = 4;

  repeated CapsHostCPUFeatureFlag feature = 5;

  optional CapsHostCPUFeatures features = 6;

  repeated CapsHostCPUPageSize page = 7;

  optional CapsHostCPUMicrocode microcode = 8;
}

// +gogo:genproto=true
message CapsHostCPUFeature {
}

// +gogo:genproto=true
message CapsHostCPUFeatureFlag {
  optional string name = 1;
}

// +gogo:genproto=true
message CapsHostCPUFeatures {
  optional CapsHostCPUFeature pae = 1;

  optional CapsHostCPUFeature nonPae = 2;

  optional CapsHostCPUFeature svm = 3;

  optional CapsHostCPUFeature vmx = 4;
}

// +gogo:genproto=true
message CapsHostCPUMicrocode {
  optional int32 version = 1;
}

// +gogo:genproto=true
message CapsHostCPUPageSize {
  optional int32 size = 3;

  optional string unit = 2;
}

// +gogo:genproto=true
message CapsHostCPUTopology {
  optional int32 sockets = 1;

  optional int32 cores = 2;

  optional int32 threads = 3;
}

// +gogo:genproto=true
message CapsHostCache {
  repeated CapsHostCacheBank banks = 1;

  optional CapsHostCacheMonitor monitor = 2;
}

// +gogo:genproto=true
message CapsHostCacheBank {
  optional int32 id = 1;

  optional int32 level = 2;

  optional string type = 3;

  optional int32 size = 8;

  optional string unit = 5;

  optional string cpus = 6;

  repeated CapsHostCacheControl control = 7;
}

// +gogo:genproto=true
message CapsHostCacheControl {
  optional int32 granularity = 1;

  optional int32 min = 2;

  optional string unit = 3;

  optional string type = 4;

  optional int32 maxAllows = 5;
}

// +gogo:genproto=true
message CapsHostCacheMonitor {
  optional int32 level = 1;

  optional int32 resueThreshold = 2;

  optional int32 maxMonitors = 3;

  repeated CapsHostCacheMonitorFeature features = 4;
}

// +gogo:genproto=true
message CapsHostCacheMonitorFeature {
  optional string name = 1;
}

// +gogo:genproto=true
message CapsHostIOMMU {
  optional string support = 1;
}

// +gogo:genproto=true
message CapsHostMemoryBandwidth {
  repeated CapsHostMemoryBandwidthNode nodes = 1;

  optional CapsHostMemoryBandwidthMonitor monitor = 2;
}

// +gogo:genproto=true
message CapsHostMemoryBandwidthMonitor {
  optional int32 max_monitors = 1;

  repeated CapsHostMemoryBandwidthMonitorFeature features = 2;
}

// +gogo:genproto=true
message CapsHostMemoryBandwidthMonitorFeature {
  optional string name = 1;
}

// +gogo:genproto=true
message CapsHostMemoryBandwidthNode {
  optional int32 id = 1;

  optional string cpus = 2;

  optional CapsHostMemoryBandwidthNodeControl control = 3;
}

// +gogo:genproto=true
message CapsHostMemoryBandwidthNodeControl {
  optional int32 granularity = 1;

  optional int32 min = 2;

  optional int32 maxAllocs = 3;
}

// +gogo:genproto=true
message CapsHostMigrationFeatures {
  optional CapsHostMigrationLive live = 1;

  optional CapsHostMigrationURITransports uriTransports = 2;
}

// +gogo:genproto=true
message CapsHostMigrationLive {
}

// +gogo:genproto=true
message CapsHostMigrationURITransports {
  repeated string uri = 1;
}

// +gogo:genproto=true
message CapsHostNUMACPU {
  optional int32 id = 1;

  optional int64 socketId = 2;

  optional int64 dieId = 3;

  optional int64 coreId = 4;

  optional string siblings = 5;
}

// +gogo:genproto=true
message CapsHostNUMACPUs {
  optional int32 num = 1;

  repeated CapsHostNUMACPU cpus = 2;
}

// +gogo:genproto=true
message CapsHostNUMACell {
  optional int32 id = 1;

  optional CapsHostNUMAMemory memory = 2;

  repeated CapsHostNUMAPageInfo pageInfo = 3;

  optional CapsHostNUMADistances distances = 4;

  optional CapsHostNUMACPUs cpus = 5;
}

// +gogo:genproto=true
message CapsHostNUMACells {
  optional int32 num = 1;

  repeated CapsHostNUMACell cells = 2;
}

// +gogo:genproto=true
message CapsHostNUMADistances {
  repeated CapsHostNUMASibling sibling = 1;
}

// +gogo:genproto=true
message CapsHostNUMAMemory {
  optional uint64 size = 3;

  optional string unit = 2;
}

// +gogo:genproto=true
message CapsHostNUMAPageInfo {
  optional int32 size = 4;

  optional string unit = 2;

  optional uint64 count = 3;
}

// +gogo:genproto=true
message CapsHostNUMASibling {
  optional int32 id = 1;

  optional int32 value = 2;
}

// +gogo:genproto=true
message CapsHostNUMATopology {
  optional CapsHostNUMACells cells = 1;
}

// +gogo:genproto=true
message CapsHostPowerManagement {
  optional CapsHostPowerManagementMode suspendMem = 1;

  optional CapsHostPowerManagementMode suspendDisk = 2;

  optional CapsHostPowerManagementMode suspendHybrid = 3;
}

// +gogo:genproto=true
message CapsHostPowerManagementMode {
}

// +gogo:genproto=true
message CapsHostSecModel {
  optional string name = 1;

  optional string doi = 2;

  repeated CapsHostSecModelLabel labels = 3;
}

// +gogo:genproto=true
message CapsHostSecModelLabel {
  optional string type = 1;

  optional string value = 2;
}

// Domain NB, try to keep the order of fields in this struct
// matching the order of XML elements that libvirt
// will generate when dumping XML.
// +gogo:deepcopy-gen=true
// +gogo:genproto=true
message Domain {
  optional string type = 1;

  optional int64 id = 2;

  optional string name = 3;

  optional string uuid = 4;

  optional DomainGenID genId = 5;

  optional string title = 6;

  optional string description = 7;

  optional DomainMetadata metadata = 8;

  optional DomainMaxMemory maxMemory = 9;

  optional DomainMemory memory = 10;

  optional DomainCurrentMemory currentMemory = 11;

  optional DomainBlockIOTune blockIoTune = 12;

  optional DomainMemoryTune memTune = 13;

  optional DomainMemoryBacking memoryBacking = 14;

  optional DomainVCPU vcpu = 15;

  optional DomainVCPUs vcpus = 16;

  optional uint64 iothreads = 17;

  optional DomainIOThreadIDs iothreadids = 18;

  optional DomainCPUTune cputune = 19;

  optional DomainNUMATune numatune = 20;

  optional DomainResource resource = 21;

  repeated DomainSysInfo sysinfo = 22;

  optional string bootloader = 23;

  optional string bootloaderArgs = 24;

  optional DomainOS os = 25;

  optional DomainIDMap idMap = 26;

  optional DomainFeatureList features = 27;

  optional DomainCPU cpu = 28;

  optional DomainClock clock = 29;

  optional string onPoweroff = 30;

  optional string onReboot = 31;

  optional string onCrash = 32;

  optional DomainPM pm = 33;

  optional DomainPerf perf = 34;

  optional DomainDeviceList devices = 35;

  repeated DomainSecLabel seclabel = 36;

  optional DomainKeyWrap keywrap = 37;

  optional DomainLaunchSecurity launchSecurity = 38;

  //  Hypervisor namespaces must all be last
  optional DomainQEMUCommandline qemuCommandline = 39;

  optional DomainQEMUCapabilities qemuCapabilities = 40;

  optional DomainQEMUDeprecation qemuDeprecation = 41;

  optional DomainLXCNamespace lxcNamespace = 42;

  optional DomainBHyveCommandline bHyveCommandline = 43;

  optional DomainVMWareDataCenterPath vmWareDataCenterPath = 44;

  optional DomainXenCommandline xenCommandline = 45;
}

// +gogo:genproto=true
message DomainACPI {
  repeated DomainACPITable tables = 1;
}

// +gogo:genproto=true
message DomainACPITable {
  optional string type = 1;

  optional string path = 2;
}

// +gogo:genproto=true
message DomainAddress {
  optional DomainAddressPCI pci = 1;

  optional DomainAddressDrive drive = 2;

  optional DomainAddressVirtioSerial virtioSerial = 3;

  optional DomainAddressCCID ccid = 4;

  optional DomainAddressUSB usb = 5;

  optional DomainAddressSpaprVIO spaprvio = 6;

  optional DomainAddressVirtioS390 virtioS390 = 7;

  optional DomainAddressCCW ccw = 8;

  optional DomainAddressVirtioMMIO virtiommio = 9;

  optional DomainAddressISA isa = 10;

  optional DomainAddressDIMM dimm = 11;

  optional DomainAddressUnassigned unassigned = 12;
}

// +gogo:genproto=true
message DomainAddressCCID {
  optional uint64 controller = 1;

  optional uint64 slot = 2;
}

// +gogo:genproto=true
message DomainAddressCCW {
  optional uint64 cssid = 1;

  optional uint64 ssid = 2;

  optional uint64 devno = 3;
}

// +gogo:genproto=true
message DomainAddressDIMM {
  optional uint64 slot = 1;

  optional uint64 base = 2;
}

// +gogo:genproto=true
message DomainAddressDrive {
  optional uint64 controller = 1;

  optional uint64 bus = 2;

  optional uint64 target = 3;

  optional uint64 unit = 4;
}

// +gogo:genproto=true
message DomainAddressISA {
  optional uint64 iobase = 1;

  optional uint64 irq = 2;
}

// +gogo:genproto=true
message DomainAddressMDev {
  optional string uuid = 1;
}

// +gogo:genproto=true
message DomainAddressPCI {
  optional uint64 domain = 1;

  optional uint64 bus = 2;

  optional uint64 slot = 3;

  optional uint64 function = 4;

  optional string multifunction = 5;

  optional DomainAddressZPCI zpci = 6;
}

// +gogo:genproto=true
message DomainAddressSpaprVIO {
  optional uint64 reg = 1;
}

// +gogo:genproto=true
message DomainAddressUSB {
  optional uint64 bus = 1;

  optional string port = 2;

  optional uint64 device = 3;
}

// +gogo:genproto=true
message DomainAddressUnassigned {
}

// +gogo:genproto=true
message DomainAddressVirtioMMIO {
}

// +gogo:genproto=true
message DomainAddressVirtioS390 {
}

// +gogo:genproto=true
message DomainAddressVirtioSerial {
  optional uint64 controller = 1;

  optional uint64 bus = 2;

  optional uint64 port = 3;
}

// +gogo:genproto=true
message DomainAddressZPCI {
  optional uint64 uid = 1;

  optional uint64 fid = 2;
}

// +gogo:genproto=true
message DomainAlias {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainAudio {
  optional int64 id = 1;

  optional DomainAudioNone none = 2;

  optional DomainAudioALSA alsa = 3;

  optional DomainAudioCoreAudio coreAudio = 4;

  optional DomainAudioJack jack = 5;

  optional DomainAudioOSS oss = 6;

  optional DomainAudioPulseAudio pulseAudio = 7;

  optional DomainAudioSDL sdl = 8;

  optional DomainAudioSPICE spice = 9;

  optional DomainAudioFile file = 10;
}

// +gogo:genproto=true
message DomainAudioALSA {
  optional DomainAudioALSAChannel input = 1;

  optional DomainAudioALSAChannel output = 2;
}

// +gogo:genproto=true
message DomainAudioALSAChannel {
  optional DomainAudioChannel domainAudioChannel = 1;

  optional string dev = 2;
}

// +gogo:genproto=true
message DomainAudioChannel {
  optional string mixingEngine = 1;

  optional string fixedSettings = 2;

  optional uint64 voices = 3;

  optional DomainAudioChannelSettings settings = 4;

  optional uint64 bufferLength = 5;
}

// +gogo:genproto=true
message DomainAudioChannelSettings {
  optional uint64 frequency = 1;

  optional uint64 channels = 2;

  optional string format = 3;
}

// +gogo:genproto=true
message DomainAudioCoreAudio {
  optional DomainAudioCoreAudioChannel input = 1;

  optional DomainAudioCoreAudioChannel output = 2;
}

// +gogo:genproto=true
message DomainAudioCoreAudioChannel {
  optional DomainAudioChannel domainAudioChannel = 1;

  optional uint64 bufferCount = 2;
}

// +gogo:genproto=true
message DomainAudioFile {
  optional string path = 1;

  optional DomainAudioFileChannel input = 2;

  optional DomainAudioFileChannel output = 3;
}

// +gogo:genproto=true
message DomainAudioFileChannel {
  optional DomainAudioChannel domainAudioChannel = 1;
}

// +gogo:genproto=true
message DomainAudioJack {
  optional DomainAudioJackChannel input = 1;

  optional DomainAudioJackChannel output = 2;
}

// +gogo:genproto=true
message DomainAudioJackChannel {
  optional DomainAudioChannel domainAudioChannel = 1;

  optional string serverName = 2;

  optional string clientName = 3;

  optional string connectPorts = 4;

  optional string exactName = 5;
}

// +gogo:genproto=true
message DomainAudioNone {
  optional DomainAudioNoneChannel input = 1;

  optional DomainAudioNoneChannel output = 2;
}

// +gogo:genproto=true
message DomainAudioNoneChannel {
  optional DomainAudioChannel domainAudioChannel = 1;
}

// +gogo:genproto=true
message DomainAudioOSS {
  optional string tryMMap = 1;

  optional string exclusive = 2;

  optional int64 dspPolicy = 3;

  optional DomainAudioOSSChannel input = 4;

  optional DomainAudioOSSChannel output = 5;
}

// +gogo:genproto=true
message DomainAudioOSSChannel {
  optional DomainAudioChannel domainAudioChannel = 1;

  optional string dev = 2;

  optional uint64 bufferCount = 3;

  optional string tryPoll = 4;
}

// +gogo:genproto=true
message DomainAudioPulseAudio {
  optional string serverName = 1;

  optional DomainAudioPulseAudioChannel input = 2;

  optional DomainAudioPulseAudioChannel output = 3;
}

// +gogo:genproto=true
message DomainAudioPulseAudioChannel {
  optional DomainAudioChannel domainAudioChannel = 1;

  optional string name = 2;

  optional string streamName = 3;

  optional uint64 latency = 4;
}

// +gogo:genproto=true
message DomainAudioSDL {
  optional string driver = 1;

  optional DomainAudioSDLChannel input = 2;

  optional DomainAudioSDLChannel output = 3;
}

// +gogo:genproto=true
message DomainAudioSDLChannel {
  optional DomainAudioChannel domainAudioChannel = 1;

  optional uint64 bufferCount = 2;
}

// +gogo:genproto=true
message DomainAudioSPICE {
  optional DomainAudioSPICEChannel input = 1;

  optional DomainAudioSPICEChannel output = 2;
}

// +gogo:genproto=true
message DomainAudioSPICEChannel {
  optional DomainAudioChannel domainAudioChannel = 1;
}

// +gogo:genproto=true
message DomainBHyveCommandline {
  repeated DomainBHyveCommandlineArg args = 1;

  repeated DomainBHyveCommandlineEnv envs = 2;
}

// +gogo:genproto=true
message DomainBHyveCommandlineArg {
  optional string value = 1;
}

// +gogo:genproto=true
message DomainBHyveCommandlineEnv {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message DomainBIOS {
  optional string useSerial = 1;

  optional int64 rebootTimeout = 2;
}

// +gogo:genproto=true
message DomainBackendDomain {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainBlockIOTune {
  optional uint64 weight = 1;

  repeated DomainBlockIOTuneDevice device = 2;
}

// +gogo:genproto=true
message DomainBlockIOTuneDevice {
  optional string path = 1;

  optional uint64 weight = 2;

  optional uint64 readIopsSec = 3;

  optional uint64 writeIopsSec = 4;

  optional uint64 readBytesSec = 5;

  optional uint64 writeBytesSec = 6;
}

// +gogo:genproto=true
message DomainBootDevice {
  optional string dev = 1;
}

// +gogo:genproto=true
message DomainBootMenu {
  optional string enable = 1;

  optional string timeout = 2;
}

// +gogo:genproto=true
message DomainCPU {
  optional string match = 1;

  optional string mode = 2;

  optional string check = 3;

  optional string migratable = 4;

  optional DomainCPUModel model = 5;

  optional string vendor = 6;

  optional DomainCPUTopology topology = 7;

  optional DomainCPUCache cache = 8;

  repeated DomainCPUFeature features = 9;

  optional DomainNuma numa = 10;
}

// +gogo:genproto=true
message DomainCPUCache {
  optional uint64 level = 1;

  optional string mode = 2;
}

// +gogo:genproto=true
message DomainCPUCacheTune {
  optional string vcpus = 1;

  repeated DomainCPUCacheTuneCache cache = 2;

  repeated DomainCPUCacheTuneMonitor monitor = 3;
}

// +gogo:genproto=true
message DomainCPUCacheTuneCache {
  optional uint64 id = 1;

  optional uint64 level = 2;

  optional string type = 3;

  optional uint64 size = 6;

  optional string unit = 5;
}

// +gogo:genproto=true
message DomainCPUCacheTuneMonitor {
  optional uint64 level = 1;

  optional string vcpus = 2;
}

// +gogo:genproto=true
message DomainCPUFeature {
  optional string policy = 1;

  optional string name = 2;
}

// +gogo:genproto=true
message DomainCPUMemoryTune {
  optional string vcp_us = 1;

  repeated DomainCPUMemoryTuneNode nodes = 2;

  repeated DomainCPUMemoryTuneMonitor monitor = 3;
}

// +gogo:genproto=true
message DomainCPUMemoryTuneMonitor {
  optional uint64 level = 1;

  optional string vcpus = 2;
}

// +gogo:genproto=true
message DomainCPUMemoryTuneNode {
  optional uint64 id = 1;

  optional uint64 bandwidth = 2;
}

// +gogo:genproto=true
message DomainCPUModel {
  optional string fallback = 1;

  optional string value = 2;

  optional string vendorId = 3;
}

// +gogo:genproto=true
message DomainCPUTopology {
  optional int64 sockets = 1;

  optional int64 dies = 2;

  optional int64 cores = 3;

  optional int64 threads = 4;
}

// +gogo:genproto=true
message DomainCPUTune {
  optional DomainCPUTuneShares shares = 1;

  optional DomainCPUTunePeriod period = 2;

  optional DomainCPUTuneQuota quota = 3;

  optional DomainCPUTunePeriod globalPeriod = 4;

  optional DomainCPUTuneQuota globalQuota = 5;

  optional DomainCPUTunePeriod emulatorPeriod = 6;

  optional DomainCPUTuneQuota emulatorQuota = 7;

  optional DomainCPUTunePeriod iothreadPeriod = 8;

  optional DomainCPUTuneQuota iothreadQuota = 9;

  repeated DomainCPUTuneVCPUPin vcpupin = 10;

  optional DomainCPUTuneEmulatorPin emulatorpin = 11;

  repeated DomainCPUTuneIOThreadPin iothreadpin = 12;

  repeated DomainCPUTuneVCPUSched vcpusched = 13;

  optional DomainCPUTuneEmulatorSched emulatorsched = 14;

  repeated DomainCPUTuneIOThreadSched iothreadsched = 15;

  repeated DomainCPUCacheTune cachetune = 16;

  repeated DomainCPUMemoryTune memorytune = 17;
}

// +gogo:genproto=true
message DomainCPUTuneEmulatorPin {
  optional string cpuset = 1;
}

// +gogo:genproto=true
message DomainCPUTuneEmulatorSched {
  optional string scheduler = 1;

  optional int64 priority = 2;
}

// +gogo:genproto=true
message DomainCPUTuneIOThreadPin {
  optional uint64 iothread = 1;

  optional string cpuset = 2;
}

// +gogo:genproto=true
message DomainCPUTuneIOThreadSched {
  optional string iothreads = 1;

  optional string scheduler = 2;

  optional int64 priority = 3;
}

// +gogo:genproto=true
message DomainCPUTunePeriod {
  optional uint64 value = 1;
}

// +gogo:genproto=true
message DomainCPUTuneQuota {
  optional int64 value = 1;
}

// +gogo:genproto=true
message DomainCPUTuneShares {
  optional uint64 value = 1;
}

// +gogo:genproto=true
message DomainCPUTuneVCPUPin {
  optional uint64 vcpu = 1;

  optional string cpu_set = 2;
}

// +gogo:genproto=true
message DomainCPUTuneVCPUSched {
  optional string vcpus = 1;

  optional string scheduler = 2;

  optional int64 priority = 3;
}

// +gogo:genproto=true
message DomainCaps {
  optional string path = 1;

  optional string domain = 2;

  optional string machine = 3;

  optional string arch = 4;

  optional DomainCapsVCPU vcpu = 5;

  optional DomainCapsIOThreads iothreads = 6;

  optional DomainCapsOS os = 7;

  optional DomainCapsCPU cpu = 8;

  optional DomainCapsDevices devices = 9;

  optional DomainCapsFeatures features = 10;
}

// +gogo:genproto=true
message DomainCapsCPU {
  repeated DomainCapsCPUMode modes = 1;
}

// +gogo:genproto=true
message DomainCapsCPUFeature {
  optional string policy = 1;

  optional string name = 2;
}

// +gogo:genproto=true
message DomainCapsCPUMode {
  optional string name = 1;

  optional string supported = 2;

  repeated DomainCapsCPUModel models = 3;

  optional string vendor = 4;

  repeated DomainCapsCPUFeature features = 5;

  repeated DomainCapsEnum enums = 6;
}

// +gogo:genproto=true
message DomainCapsCPUModel {
  optional string name = 1;

  optional string usable = 2;

  optional string fallback = 3;

  optional string deprecated = 4;
}

// +gogo:genproto=true
message DomainCapsDevice {
  optional string supported = 1;

  repeated DomainCapsEnum enums = 2;
}

// +gogo:genproto=true
message DomainCapsDevices {
  optional DomainCapsDevice disk = 1;

  optional DomainCapsDevice graphics = 2;

  optional DomainCapsDevice video = 3;

  optional DomainCapsDevice hostdev = 4;

  optional DomainCapsDevice rng = 5;
}

// +gogo:genproto=true
message DomainCapsEnum {
  optional string name = 1;

  repeated string values = 2;
}

// +gogo:genproto=true
message DomainCapsFeatureBackingStoreInput {
  optional string supported = 1;
}

// +gogo:genproto=true
message DomainCapsFeatureBackup {
  optional string supported = 1;
}

// +gogo:genproto=true
message DomainCapsFeatureGIC {
  optional string supported = 1;

  repeated DomainCapsEnum enums = 2;
}

// +gogo:genproto=true
message DomainCapsFeatureGenID {
  optional string supported = 1;
}

// +gogo:genproto=true
message DomainCapsFeatureSEV {
  optional string supported = 1;

  optional uint64 cBitPos = 2;

  optional uint64 reducedPhysBits = 3;
}

// +gogo:genproto=true
message DomainCapsFeatureVMCoreInfo {
  optional string supported = 1;
}

// +gogo:genproto=true
message DomainCapsFeatures {
  optional DomainCapsFeatureGIC gic = 1;

  optional DomainCapsFeatureVMCoreInfo vmCoreInfo = 2;

  optional DomainCapsFeatureGenID genId = 3;

  optional DomainCapsFeatureBackingStoreInput backingStoreInput = 4;

  optional DomainCapsFeatureBackup backup = 5;

  optional DomainCapsFeatureSEV sev = 6;
}

// +gogo:genproto=true
message DomainCapsIOThreads {
  optional string supported = 1;
}

// +gogo:genproto=true
message DomainCapsOS {
  optional string supported = 1;

  optional DomainCapsOSLoader loader = 2;

  repeated DomainCapsEnum enums = 3;
}

// +gogo:genproto=true
message DomainCapsOSLoader {
  optional string supported = 1;

  repeated string values = 2;

  repeated DomainCapsEnum enums = 3;
}

// +gogo:genproto=true
message DomainCapsVCPU {
  optional uint64 max = 1;
}

// +gogo:genproto=true
message DomainCell {
  optional uint64 id = 1;

  optional string cpus = 2;

  optional uint64 memory = 3;

  optional string unit = 4;

  optional string memAccess = 5;

  optional string discard = 6;

  optional DomainCellDistances distances = 7;

  repeated DomainCellCache caches = 8;
}

// +gogo:genproto=true
message DomainCellCache {
  optional uint64 level = 1;

  optional string associativity = 2;

  optional string policy = 3;

  optional DomainCellCacheSize size = 6;

  optional DomainCellCacheLine line = 5;
}

// +gogo:genproto=true
message DomainCellCacheLine {
  optional string value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainCellCacheSize {
  optional string value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainCellDistances {
  repeated DomainCellSibling siblings = 1;
}

// +gogo:genproto=true
message DomainCellSibling {
  optional uint64 id = 1;

  optional uint64 value = 2;
}

// +gogo:genproto=true
message DomainChannel {
  optional DomainChardevSource source = 1;

  optional DomainChardevProtocol protocol = 2;

  optional DomainChannelTarget target = 3;

  optional DomainChardevLog log = 4;

  optional DomainDeviceACPI acpi = 5;

  optional DomainAlias alias = 6;

  optional DomainAddress address = 7;
}

// +gogo:genproto=true
message DomainChannelTarget {
  optional DomainChannelTargetVirtIO virtio = 1;

  optional DomainChannelTargetXen xen = 2;

  optional DomainChannelTargetGuestFWD guestfwd = 3;
}

// +gogo:genproto=true
message DomainChannelTargetGuestFWD {
  optional string address = 1;

  optional string port = 2;
}

// +gogo:genproto=true
message DomainChannelTargetVirtIO {
  optional string name = 1;

  optional string state = 2;
}

// +gogo:genproto=true
message DomainChannelTargetXen {
  optional string name = 1;

  optional string state = 2;
}

// +gogo:genproto=true
message DomainChardevLog {
  optional string file = 1;

  optional string append = 2;
}

// +gogo:genproto=true
message DomainChardevProtocol {
  optional string type = 1;
}

// +gogo:genproto=true
message DomainChardevSource {
  optional DomainChardevSourceNull null = 1;

  optional DomainChardevSourceVC vc = 2;

  optional DomainChardevSourcePty pty = 3;

  optional DomainChardevSourceDev dev = 4;

  optional DomainChardevSourceFile file = 5;

  optional DomainChardevSourcePipe pipe = 6;

  optional DomainChardevSourceStdIO stdio = 7;

  optional DomainChardevSourceUDP udp = 8;

  optional DomainChardevSourceTCP tcp = 9;

  optional DomainChardevSourceUNIX unix = 10;

  optional DomainChardevSourceSpiceVMC spicevmc = 11;

  optional DomainChardevSourceSpicePort spiceport = 12;

  optional DomainChardevSourceNMDM nmdm = 13;
}

// +gogo:genproto=true
message DomainChardevSourceDev {
  optional string path = 1;

  repeated DomainDeviceSecLabel sec_label = 2;
}

// +gogo:genproto=true
message DomainChardevSourceFile {
  optional string path = 1;

  optional string append = 2;

  repeated DomainDeviceSecLabel seclabel = 3;
}

// +gogo:genproto=true
message DomainChardevSourceNMDM {
  optional string master = 1;

  optional string slave = 2;
}

// +gogo:genproto=true
message DomainChardevSourceNull {
}

// +gogo:genproto=true
message DomainChardevSourcePipe {
  optional string path = 1;

  repeated DomainDeviceSecLabel seclabel = 2;
}

// +gogo:genproto=true
message DomainChardevSourcePty {
  optional string path = 1;

  repeated DomainDeviceSecLabel seclabel = 2;
}

// +gogo:genproto=true
message DomainChardevSourceReconnect {
  optional string enabled = 1;

  optional uint64 timeout = 2;
}

// +gogo:genproto=true
message DomainChardevSourceSpicePort {
  optional string channel = 1;
}

// +gogo:genproto=true
message DomainChardevSourceSpiceVMC {
}

// +gogo:genproto=true
message DomainChardevSourceStdIO {
}

// +gogo:genproto=true
message DomainChardevSourceTCP {
  optional string mode = 1;

  optional string host = 2;

  optional string service = 3;

  optional string tls = 4;

  optional DomainChardevSourceReconnect reconnect = 5;
}

// +gogo:genproto=true
message DomainChardevSourceUDP {
  optional string bindHost = 1;

  optional string bindService = 2;

  optional string connectHost = 3;

  optional string connectService = 4;
}

// +gogo:genproto=true
message DomainChardevSourceUNIX {
  optional string mode = 1;

  optional string path = 2;

  optional DomainChardevSourceReconnect reconnect = 3;

  repeated DomainDeviceSecLabel seclabel = 4;
}

// +gogo:genproto=true
message DomainChardevSourceVC {
}

// +gogo:genproto=true
message DomainChardevTarget {
  optional string type = 1;

  optional string name = 2;

  optional string state = 3;

  // is guest agent connected?
  optional uint64 port = 4;
}

// +gogo:genproto=true
message DomainClock {
  optional string offset = 1;

  optional string basis = 2;

  optional string adjustment = 3;

  optional string time_zone = 4;

  repeated DomainTimer timer = 5;
}

// +gogo:genproto=true
message DomainConsole {
  optional string tty = 1;

  optional DomainChardevSource source = 2;

  optional DomainChardevProtocol protocol = 3;

  optional DomainConsoleTarget target = 4;

  optional DomainChardevLog log = 5;

  optional DomainDeviceACPI acpi = 6;

  optional DomainAlias alias = 7;

  optional DomainAddress address = 8;
}

// +gogo:genproto=true
message DomainConsoleTarget {
  optional string type = 1;

  optional uint64 port = 2;
}

// +gogo:genproto=true
message DomainController {
  optional string type = 1;

  optional uint64 index = 2;

  optional string model = 3;

  optional DomainControllerDriver driver = 4;

  optional DomainControllerPCI pci = 5;

  optional DomainControllerUSB usb = 6;

  optional DomainControllerVirtIOSerial virtioSerial = 7;

  optional DomainControllerXenBus xenBus = 8;

  optional DomainDeviceACPI acpi = 9;

  optional DomainAlias alias = 10;

  optional DomainAddress address = 11;
}

// +gogo:genproto=true
message DomainControllerDriver {
  optional uint64 queues = 1;

  optional uint64 cmdPerLun = 2;

  optional uint64 maxSectors = 3;

  optional string ioeventfd = 4;

  optional uint64 iothread = 5;

  optional string iommu = 6;

  optional string ats = 7;

  optional string packed = 8;
}

// +gogo:genproto=true
message DomainControllerPCI {
  optional DomainControllerPCIModel model = 1;

  optional DomainControllerPCITarget target = 2;

  optional DomainControllerPCIHole64 pcihole64 = 3;
}

// +gogo:genproto=true
message DomainControllerPCIHole64 {
  optional uint64 size = 3;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainControllerPCIModel {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainControllerPCITarget {
  optional uint64 chassisNr = 1;

  optional uint64 chassis = 2;

  optional uint64 port = 3;

  optional uint64 busNr = 4;

  optional uint64 index = 5;

  optional uint64 numaNode = 6;

  optional string hotplug = 7;
}

// +gogo:genproto=true
message DomainControllerUSB {
  optional uint64 port = 1;

  optional DomainControllerUSBMaster master = 2;
}

// +gogo:genproto=true
message DomainControllerUSBMaster {
  optional uint64 startPort = 1;
}

// +gogo:genproto=true
message DomainControllerVirtIOSerial {
  optional uint64 ports = 1;

  optional uint64 vectors = 2;
}

// +gogo:genproto=true
message DomainControllerXenBus {
  optional uint64 maxGrantFrames = 1;

  optional uint64 maxEventChannels = 2;
}

// +gogo:genproto=true
message DomainCurrentMemory {
  optional uint64 value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainDeviceACPI {
  optional uint64 index = 1;
}

// +gogo:genproto=true
message DomainDeviceBoot {
  optional uint64 order = 1;

  optional string loadParm = 2;
}

// +gogo:genproto=true
message DomainDeviceList {
  optional string emulator = 1;

  repeated DomainDisk disks = 2;

  repeated DomainController controllers = 3;

  repeated DomainLease leases = 4;

  repeated DomainFilesystem filesystems = 5;

  repeated DomainInterface interfaces = 6;

  repeated DomainSmartcard smartcards = 7;

  repeated DomainSerial serials = 8;

  repeated DomainParallel parallels = 9;

  repeated DomainConsole consoles = 10;

  repeated DomainChannel channels = 11;

  repeated DomainInput inputs = 12;

  repeated DomainTPM tpms = 13;

  repeated DomainGraphic graphics = 14;

  repeated DomainSound sounds = 15;

  repeated DomainAudio audios = 16;

  repeated DomainVideo videos = 17;

  repeated DomainHostdev hostdevs = 18;

  repeated DomainRedirDev redirDevs = 19;

  repeated DomainRedirFilter redirfilters = 20;

  repeated DomainHub hubs = 21;

  optional DomainWatchdog watchdog = 22;

  optional DomainMemBalloon memballoon = 23;

  repeated DomainRNG rngs = 24;

  optional DomainNVRAM nvram = 25;

  repeated DomainPanic panics = 26;

  repeated DomainShmem shmems = 27;

  repeated DomainMemorydev memorydevs = 28;

  optional DomainIOMMU iommu = 29;

  optional DomainVSock vsock = 30;
}

// +gogo:genproto=true
message DomainDeviceSecLabel {
  optional string model = 1;

  optional string labelSkip = 2;

  optional string relabel = 3;

  optional string label = 4;
}

// +gogo:genproto=true
message DomainDisk {
  optional string device = 1;

  optional string rawio = 2;

  optional string sgio = 3;

  optional string snapshot = 4;

  optional string model = 5;

  optional DomainDiskDriver driver = 6;

  optional DomainDiskAuth auth = 7;

  optional DomainDiskSource source = 8;

  optional DomainDiskBackingStore backingStore = 9;

  optional DomainBackendDomain backendDomain = 10;

  optional DomainDiskGeometry geometry = 11;

  optional DomainDiskBlockIO blockio = 12;

  optional DomainDiskMirror mirror = 13;

  optional DomainDiskTarget target = 14;

  optional DomainDiskIOTune iotune = 15;

  optional DomainDiskReadOnly readonly = 16;

  optional DomainDiskShareable shareable = 17;

  optional DomainDiskTransient transient = 18;

  optional string serial = 19;

  optional string wwn = 20;

  optional string vendor = 21;

  optional string product = 22;

  optional DomainDiskEncryption encryption = 23;

  optional DomainDeviceBoot boot = 24;

  optional DomainDeviceACPI acpi = 25;

  optional DomainAlias alias = 26;

  optional DomainAddress address = 27;
}

// +gogo:genproto=true
message DomainDiskAuth {
  optional string username = 1;

  optional DomainDiskSecret secret = 2;
}

// +gogo:genproto=true
message DomainDiskBackingStore {
  optional uint64 index = 1;

  optional DomainDiskFormat format = 2;

  optional DomainDiskSource source = 3;

  optional DomainDiskBackingStore backingStore = 4;
}

// +gogo:genproto=true
message DomainDiskBlockIO {
  optional uint64 logicalBlockSize = 1;

  optional uint64 physicalBlockSize = 2;
}

// +gogo:genproto=true
message DomainDiskCookie {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message DomainDiskCookies {
  repeated DomainDiskCookie cookies = 1;
}

// +gogo:genproto=true
message DomainDiskDriver {
  optional string name = 1;

  optional string type = 2;

  optional string cache = 3;

  optional string errorPolicy = 4;

  optional string rerrorPolicy = 5;

  optional string io = 6;

  optional string ioeventfd = 7;

  optional string eventIdx = 8;

  optional string copyOnRead = 9;

  optional string discard = 10;

  optional uint64 iothread = 11;

  optional string detectZeros = 12;

  optional uint64 queues = 13;

  optional string iommu = 14;

  optional string ats = 15;

  optional string packed = 16;

  optional DomainDiskMetadataCache metadata_cache = 17;
}

// +gogo:genproto=true
message DomainDiskEncryption {
  optional string format = 1;

  optional DomainDiskSecret secret = 2;
}

// +gogo:genproto=true
message DomainDiskFormat {
  optional string type = 1;

  optional DomainDiskMetadataCache metadataCache = 2;
}

// +gogo:genproto=true
message DomainDiskGeometry {
  optional uint64 cyli = 1;

  optional uint64 heads = 2;

  optional uint64 secs = 3;

  optional string trans = 4;
}

// +gogo:genproto=true
message DomainDiskIOTune {
  optional uint64 totalBytesSec = 1;

  optional uint64 readBytesSec = 2;

  optional uint64 writeBytesSec = 3;

  optional uint64 totalIopsSec = 4;

  optional uint64 readIopsSec = 5;

  optional uint64 writeIopsSec = 6;

  optional uint64 totalBytesSecMax = 7;

  optional uint64 readBytesSecMax = 8;

  optional uint64 writeBytesSecMax = 9;

  optional uint64 totalIopsSecMax = 10;

  optional uint64 readIopsSecMax = 11;

  optional uint64 writeIopsSecMax = 12;

  optional uint64 totalBytesSecMaxLength = 13;

  optional uint64 readBytesSecMaxLength = 14;

  optional uint64 writeBytesSecMaxLength = 15;

  optional uint64 totalIopsSecMaxLength = 16;

  optional uint64 readIopsSecMaxLength = 17;

  optional uint64 writeIopsSecMaxLength = 18;

  optional uint64 sizeIopsSec = 19;

  optional string groupName = 20;
}

// +gogo:genproto=true
message DomainDiskMetadataCache {
  optional DomainDiskMetadataCacheSize maxSize = 1;
}

// +gogo:genproto=true
message DomainDiskMetadataCacheSize {
  optional string unit = 1;

  optional int64 value = 2;
}

// +gogo:genproto=true
message DomainDiskMirror {
  optional string job = 1;

  optional string ready = 2;

  optional DomainDiskFormat format = 3;

  optional DomainDiskSource source = 4;

  optional DomainDiskBackingStore backingStore = 5;
}

// +gogo:genproto=true
message DomainDiskReadOnly {
}

// +gogo:genproto=true
message DomainDiskReservations {
  optional string enabled = 1;

  optional string managed = 2;

  optional DomainDiskReservationsSource source = 3;
}

// +gogo:genproto=true
message DomainDiskReservationsSource {
  optional DomainChardevSourceNull null = 1;

  optional DomainChardevSourceVC vc = 2;

  optional DomainChardevSourcePty pty = 3;

  optional DomainChardevSourceDev dev = 4;

  optional DomainChardevSourceFile file = 5;

  optional DomainChardevSourcePipe pipe = 6;

  optional DomainChardevSourceStdIO stdio = 7;

  optional DomainChardevSourceUDP udp = 8;

  optional DomainChardevSourceTCP tcp = 9;

  optional DomainChardevSourceUNIX unix = 10;

  optional DomainChardevSourceSpiceVMC spicevmc = 11;

  optional DomainChardevSourceSpicePort spiceport = 12;

  optional DomainChardevSourceNMDM nmdm = 13;
}

// +gogo:genproto=true
message DomainDiskSecret {
  optional string type = 1;

  optional string usage = 2;

  optional string uuid = 3;
}

// +gogo:genproto=true
message DomainDiskShareable {
}

// +gogo:genproto=true
message DomainDiskSlice {
  optional string type = 1;

  optional uint64 offset = 2;

  optional uint64 size = 3;
}

// +gogo:genproto=true
message DomainDiskSlices {
  repeated DomainDiskSlice slices = 1;
}

// +gogo:genproto=true
message DomainDiskSource {
  optional DomainDiskSourceFile file = 1;

  optional DomainDiskSourceBlock block = 2;

  optional DomainDiskSourceDir dir = 3;

  optional DomainDiskSourceNetwork network = 4;

  optional DomainDiskSourceVolume volume = 5;

  optional DomainDiskSourceNVME nvme = 6;

  optional DomainDiskSourceVHostUser vHostUser = 7;

  optional string startupPolicy = 8;

  optional uint64 index = 9;

  optional DomainDiskEncryption encryption = 10;

  optional DomainDiskReservations reservations = 11;

  optional DomainDiskSlices slices = 12;

  optional DomainDiskSourceSSL ssl = 13;

  optional DomainDiskCookies cookies = 14;

  optional DomainDiskSourceReadahead readahead = 15;

  optional DomainDiskSourceTimeout timeout = 16;
}

// +gogo:genproto=true
message DomainDiskSourceBlock {
  optional string dev = 1;

  repeated DomainDeviceSecLabel seclabel = 2;
}

// +gogo:genproto=true
message DomainDiskSourceDir {
  optional string dir = 1;
}

// +gogo:genproto=true
message DomainDiskSourceFile {
  optional string file = 1;

  repeated DomainDeviceSecLabel seclabel = 2;
}

// +gogo:genproto=true
message DomainDiskSourceHost {
  optional string transport = 1;

  optional string name = 2;

  optional string port = 3;

  optional string socket = 4;
}

// +gogo:genproto=true
message DomainDiskSourceNVME {
  optional DomainDiskSourceNVMEPCI pci = 1;
}

// +gogo:genproto=true
message DomainDiskSourceNVMEPCI {
  optional string managed = 1;

  optional uint64 namespace = 2;

  optional DomainAddressPCI address = 3;
}

// +gogo:genproto=true
message DomainDiskSourceNetwork {
  optional string protocol = 1;

  optional string name = 2;

  optional string query = 3;

  optional string tls = 4;

  repeated DomainDiskSourceHost hosts = 5;

  optional DomainDiskSourceNetworkIdentity identity = 6;

  optional DomainDiskSourceNetworkInitiator initiator = 7;

  optional DomainDiskSourceNetworkSnapshot snapshot = 8;

  optional DomainDiskSourceNetworkConfig config = 9;

  optional DomainDiskAuth auth = 10;
}

// +gogo:genproto=true
message DomainDiskSourceNetworkConfig {
  optional string file = 1;
}

// +gogo:genproto=true
message DomainDiskSourceNetworkIQN {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainDiskSourceNetworkIdentity {
  optional string user = 1;

  optional string group = 2;
}

// +gogo:genproto=true
message DomainDiskSourceNetworkInitiator {
  optional DomainDiskSourceNetworkIQN iqn = 1;
}

// +gogo:genproto=true
message DomainDiskSourceNetworkSnapshot {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainDiskSourceReadahead {
  optional string size = 1;
}

// +gogo:genproto=true
message DomainDiskSourceSSL {
  optional string verify = 1;
}

// +gogo:genproto=true
message DomainDiskSourceTimeout {
  optional string seconds = 1;
}

// +gogo:genproto=true
message DomainDiskSourceVHostUser {
  optional DomainChardevSourceNull null = 1;

  optional DomainChardevSourceVC vc = 2;

  optional DomainChardevSourcePty pty = 3;

  optional DomainChardevSourceDev dev = 4;

  optional DomainChardevSourceFile file = 5;

  optional DomainChardevSourcePipe pipe = 6;

  optional DomainChardevSourceStdIO stdio = 7;

  optional DomainChardevSourceUDP udp = 8;

  optional DomainChardevSourceTCP tcp = 9;

  optional DomainChardevSourceUNIX unix = 10;

  optional DomainChardevSourceSpiceVMC spicevmc = 11;

  optional DomainChardevSourceSpicePort spiceport = 12;

  optional DomainChardevSourceNMDM nmdm = 13;
}

// +gogo:genproto=true
message DomainDiskSourceVolume {
  optional string pool = 1;

  optional string volume = 2;

  optional string mode = 3;

  repeated DomainDeviceSecLabel sec_label = 4;
}

// +gogo:genproto=true
message DomainDiskTarget {
  optional string dev = 1;

  optional string bus = 2;

  optional string tray = 3;

  optional string removable = 4;

  optional uint64 rotationRate = 5;
}

// +gogo:genproto=true
message DomainDiskTransient {
}

// +gogo:genproto=true
message DomainFeature {
}

// +gogo:genproto=true
message DomainFeatureAPIC {
  optional string eoi = 1;
}

// +gogo:genproto=true
message DomainFeatureCFPC {
  optional string value = 1;
}

// +gogo:genproto=true
message DomainFeatureCapabilities {
  optional string policy = 1;

  optional DomainFeatureCapability auditControl = 2;

  optional DomainFeatureCapability auditWrite = 3;

  optional DomainFeatureCapability blockSuspend = 4;

  optional DomainFeatureCapability chown = 5;

  optional DomainFeatureCapability dacOverride = 6;

  optional DomainFeatureCapability dacReadSearch = 7;

  optional DomainFeatureCapability fowner = 8;

  optional DomainFeatureCapability fsetid = 9;

  optional DomainFeatureCapability ipcLock = 10;

  optional DomainFeatureCapability ipcOwner = 11;

  optional DomainFeatureCapability kill = 12;

  optional DomainFeatureCapability lease = 13;

  optional DomainFeatureCapability linuxImmutable = 14;

  optional DomainFeatureCapability macAdmin = 15;

  optional DomainFeatureCapability macOverride = 16;

  optional DomainFeatureCapability mknod = 17;

  optional DomainFeatureCapability netAdmin = 18;

  optional DomainFeatureCapability netBindService = 19;

  optional DomainFeatureCapability netBroadcast = 20;

  optional DomainFeatureCapability netraw = 21;

  optional DomainFeatureCapability setgid = 22;

  optional DomainFeatureCapability setfcap = 23;

  optional DomainFeatureCapability setpcap = 24;

  optional DomainFeatureCapability setuid = 25;

  optional DomainFeatureCapability admin = 26;

  optional DomainFeatureCapability boot = 27;

  optional DomainFeatureCapability chroot = 28;

  optional DomainFeatureCapability module = 29;

  optional DomainFeatureCapability nice = 30;

  optional DomainFeatureCapability pacct = 31;

  optional DomainFeatureCapability ptrace = 32;

  optional DomainFeatureCapability rawio = 33;

  optional DomainFeatureCapability resource = 34;

  optional DomainFeatureCapability time = 35;

  optional DomainFeatureCapability ttyConfig = 36;

  optional DomainFeatureCapability sysLog = 37;

  optional DomainFeatureCapability wakeAlarm = 38;
}

// +gogo:genproto=true
message DomainFeatureCapability {
  optional string state = 1;
}

// +gogo:genproto=true
message DomainFeatureGIC {
  optional string version = 1;
}

// +gogo:genproto=true
message DomainFeatureHPT {
  optional string resizing = 1;

  optional DomainFeatureHPTPageSize maxpagesize = 2;
}

// +gogo:genproto=true
message DomainFeatureHPTPageSize {
  optional string unit = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message DomainFeatureHyperV {
  optional DomainFeature domainFeature = 1;

  optional DomainFeatureState relaxed = 2;

  optional DomainFeatureState vapic = 3;

  optional DomainFeatureHyperVSpinlocks spinlocks = 4;

  optional DomainFeatureState vpindex = 5;

  optional DomainFeatureState runtime = 6;

  optional DomainFeatureState synic = 7;

  optional DomainFeatureHyperVSTimer stimer = 8;

  optional DomainFeatureState reset = 16;

  optional DomainFeatureHyperVVendorId vendorId = 10;

  optional DomainFeatureState frequencies = 11;

  optional DomainFeatureState reenlightenment = 12;

  optional DomainFeatureState tlb_flush = 13;

  optional DomainFeatureState ipi = 14;

  optional DomainFeatureState evmcs = 15;
}

// +gogo:genproto=true
message DomainFeatureHyperVSTimer {
  optional DomainFeatureState domainFeatureState = 1;

  optional DomainFeatureState direct = 2;
}

// +gogo:genproto=true
message DomainFeatureHyperVSpinlocks {
  optional DomainFeatureState domainFeatureState = 1;

  optional uint64 retries = 2;
}

// +gogo:genproto=true
message DomainFeatureHyperVVendorId {
  optional DomainFeatureState domainFeatureState = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message DomainFeatureIBS {
  optional string value = 1;
}

// +gogo:genproto=true
message DomainFeatureIOAPIC {
  optional string driver = 1;
}

// +gogo:genproto=true
message DomainFeatureKVM {
  optional DomainFeatureState hidden = 1;

  optional DomainFeatureState hintDedicated = 2;

  optional DomainFeatureState pollControl = 3;
}

// +gogo:genproto=true
message DomainFeatureList {
  optional DomainFeature pae = 1;

  optional DomainFeature acpi = 2;

  optional DomainFeatureAPIC apic = 3;

  optional DomainFeatureState hap = 4;

  optional DomainFeature viridian = 5;

  optional DomainFeature privnet = 6;

  optional DomainFeatureHyperV hyperv = 7;

  optional DomainFeatureKVM kvm = 8;

  optional DomainFeatureXen xen = 9;

  optional DomainFeatureState pvspinlock = 10;

  optional DomainFeatureState pmu = 11;

  optional DomainFeatureState vmport = 12;

  optional DomainFeatureGIC gic = 13;

  optional DomainFeatureSMM smm = 14;

  optional DomainFeatureIOAPIC ioapic = 15;

  optional DomainFeatureHPT hpt = 16;

  optional DomainFeatureState htm = 17;

  optional DomainFeatureState nestedHv = 18;

  optional DomainFeatureCapabilities capabilities = 19;

  optional DomainFeatureState vmCoreInfo = 20;

  optional DomainFeatureMSRS msrs = 21;

  optional DomainFeatureState ccfAssist = 22;

  optional DomainFeatureCFPC cfpc = 23;

  optional DomainFeatureSBBC sbbc = 24;

  optional DomainFeatureIBS ibs = 25;
}

// +gogo:genproto=true
message DomainFeatureMSRS {
  optional string unknown = 1;
}

// +gogo:genproto=true
message DomainFeatureSBBC {
  optional string value = 1;
}

// +gogo:genproto=true
message DomainFeatureSMM {
  optional string state = 1;

  optional DomainFeatureSMMTSeg tseg = 2;
}

// +gogo:genproto=true
message DomainFeatureSMMTSeg {
  optional string unit = 1;

  optional uint64 value = 2;
}

// +gogo:genproto=true
message DomainFeatureState {
  optional string state = 1;
}

// +gogo:genproto=true
message DomainFeatureXen {
  optional DomainFeatureXenE820Host e820Host = 1;

  optional DomainFeatureXenPassthrough passthrough = 2;
}

// +gogo:genproto=true
message DomainFeatureXenE820Host {
  optional string state = 1;
}

// +gogo:genproto=true
message DomainFeatureXenPassthrough {
  optional string state = 1;

  optional string mode = 2;
}

// +gogo:genproto=true
message DomainFilesystem {
  optional string accessMode = 1;

  optional string model = 2;

  optional string multidevs = 3;

  optional string fmode = 4;

  optional string dmode = 5;

  optional DomainFilesystemDriver driver = 6;

  optional DomainFilesystemBinary binary = 7;

  optional DomainFilesystemSource source = 8;

  optional DomainFilesystemTarget target = 9;

  optional DomainFilesystemReadOnly readonly = 10;

  optional DomainFilesystemSpaceHardLimit spaceHardLimit = 11;

  optional DomainFilesystemSpaceSoftLimit spaceSoftLimit = 12;

  optional DomainDeviceBoot boot = 13;

  optional DomainDeviceACPI acpi = 14;

  optional DomainAlias alias = 15;

  optional DomainAddress address = 16;
}

// +gogo:genproto=true
message DomainFilesystemBinary {
  optional string path = 1;

  optional string xattr = 2;

  optional DomainFilesystemBinaryCache cache = 3;

  optional DomainFilesystemBinarySandbox sandbox = 4;

  optional DomainFilesystemBinaryLock lock = 5;
}

// +gogo:genproto=true
message DomainFilesystemBinaryCache {
  optional string mode = 1;
}

// +gogo:genproto=true
message DomainFilesystemBinaryLock {
  optional string posix = 1;

  optional string flock = 2;
}

// +gogo:genproto=true
message DomainFilesystemBinarySandbox {
  optional string mode = 1;
}

// +gogo:genproto=true
message DomainFilesystemDriver {
  optional string type = 1;

  optional string format = 2;

  optional string name = 3;

  optional string wrpolicy = 4;

  optional string iommu = 5;

  optional string ats = 6;

  optional string packed = 7;

  optional uint64 queue = 8;
}

// +gogo:genproto=true
message DomainFilesystemReadOnly {
}

// +gogo:genproto=true
message DomainFilesystemSource {
  optional DomainFilesystemSourceMount mount = 1;

  optional DomainFilesystemSourceBlock block = 2;

  optional DomainFilesystemSourceFile file = 3;

  optional DomainFilesystemSourceTemplate template = 4;

  optional DomainFilesystemSourceRAM ram = 5;

  optional DomainFilesystemSourceBind bind = 6;

  optional DomainFilesystemSourceVolume volume = 7;
}

// +gogo:genproto=true
message DomainFilesystemSourceBind {
  optional string dir = 1;
}

// +gogo:genproto=true
message DomainFilesystemSourceBlock {
  optional string dev = 1;
}

// +gogo:genproto=true
message DomainFilesystemSourceFile {
  optional string file = 1;
}

// +gogo:genproto=true
message DomainFilesystemSourceMount {
  optional string dir = 1;

  optional string socket = 2;
}

// +gogo:genproto=true
message DomainFilesystemSourceRAM {
  optional uint64 usage = 1;

  optional string units = 2;
}

// +gogo:genproto=true
message DomainFilesystemSourceTemplate {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainFilesystemSourceVolume {
  optional string pool = 1;

  optional string volume = 2;
}

// +gogo:genproto=true
message DomainFilesystemSpaceHardLimit {
  optional uint64 value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainFilesystemSpaceSoftLimit {
  optional uint64 value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainFilesystemTarget {
  optional string dir = 1;
}

// +gogo:genproto=true
message DomainGenID {
  optional string value = 1;
}

// +gogo:genproto=true
message DomainGraphic {
  optional DomainGraphicSDL sdl = 1;

  optional DomainGraphicVNC vnc = 2;

  optional DomainGraphicRDP rdp = 3;

  optional DomainGraphicDesktop desktop = 4;

  optional DomainGraphicSpice spice = 5;

  optional DomainGraphicEGLHeadless eglHeadless = 6;

  optional DomainGraphicAudio audio = 7;
}

// +gogo:genproto=true
message DomainGraphicAudio {
  optional uint64 id = 1;
}

// +gogo:genproto=true
message DomainGraphicChannel {
  optional string name = 1;

  optional string mode = 2;
}

// +gogo:genproto=true
message DomainGraphicDesktop {
  optional string display = 1;

  optional string fullscreen = 2;
}

// +gogo:genproto=true
message DomainGraphicEGLHeadless {
  optional DomainGraphicEGLHeadlessGL gl = 1;
}

// +gogo:genproto=true
message DomainGraphicEGLHeadlessGL {
  optional string rendernode = 1;
}

// +gogo:genproto=true
message DomainGraphicFileTransfer {
  optional string enable = 1;
}

// +gogo:genproto=true
message DomainGraphicListener {
  optional DomainGraphicListenerAddress address = 1;

  optional DomainGraphicListenerNetwork network = 2;

  optional DomainGraphicListenerSocket socket = 3;
}

// +gogo:genproto=true
message DomainGraphicListenerAddress {
  optional string address = 1;
}

// +gogo:genproto=true
message DomainGraphicListenerNetwork {
  optional string address = 1;

  optional string network = 2;
}

// +gogo:genproto=true
message DomainGraphicListenerSocket {
  optional string socket = 1;
}

// +gogo:genproto=true
message DomainGraphicRDP {
  optional int64 port = 1;

  optional string autoport = 2;

  optional string replaceuser = 3;

  optional string multiuser = 4;

  optional string listen = 5;

  repeated DomainGraphicListener listeners = 6;
}

// +gogo:genproto=true
message DomainGraphicSDL {
  optional string display = 1;

  optional string xauth = 2;

  optional string fullscreen = 3;

  optional DomainGraphicsSDLGL gl = 4;
}

// +gogo:genproto=true
message DomainGraphicSpice {
  optional int64 port = 1;

  optional int64 tlsPort = 2;

  optional string autoPort = 3;

  optional string listen = 4;

  optional string keymap = 5;

  optional string defaultMode = 6;

  optional string passwd = 7;

  optional string passwdValidTo = 8;

  optional string connected = 9;

  repeated DomainGraphicListener listeners = 10;

  repeated DomainGraphicSpiceChannel channel = 11;

  optional DomainGraphicSpiceImage image = 12;

  optional DomainGraphicSpiceJPEG jpeg = 13;

  optional DomainGraphicSpiceZLib zlib = 14;

  optional DomainGraphicSpicePlayback playback = 15;

  optional DomainGraphicSpiceStreaming streaming = 16;

  optional DomainGraphicSpiceMouse mouse = 17;

  optional DomainGraphicSpiceClipBoard clipboard = 18;

  optional DomainGraphicSpiceFileTransfer filetransfer = 19;

  optional DomainGraphicSpiceGL gl = 20;
}

// +gogo:genproto=true
message DomainGraphicSpiceChannel {
  optional string name = 1;

  optional string mode = 2;
}

// +gogo:genproto=true
message DomainGraphicSpiceClipBoard {
  optional string copypaste = 1;
}

// +gogo:genproto=true
message DomainGraphicSpiceFileTransfer {
  optional string enable = 1;
}

// +gogo:genproto=true
message DomainGraphicSpiceGL {
  optional string enable = 1;

  optional string rendernode = 2;
}

// +gogo:genproto=true
message DomainGraphicSpiceImage {
  optional string compression = 1;
}

// +gogo:genproto=true
message DomainGraphicSpiceJPEG {
  optional string compression = 1;
}

// +gogo:genproto=true
message DomainGraphicSpiceMouse {
  optional string mode = 1;
}

// +gogo:genproto=true
message DomainGraphicSpicePlayback {
  optional string compression = 1;
}

// +gogo:genproto=true
message DomainGraphicSpiceStreaming {
  optional string mode = 1;
}

// +gogo:genproto=true
message DomainGraphicSpiceZLib {
  optional string compression = 1;
}

// +gogo:genproto=true
message DomainGraphicVNC {
  optional string socket = 1;

  optional int64 port = 2;

  optional string autoport = 3;

  optional int64 websocket = 4;

  optional string keymap = 5;

  optional string sharePolicy = 6;

  optional string passwd = 7;

  optional string passwdValidTo = 8;

  optional string connected = 9;

  optional string powerControl = 10;

  optional string listen = 11;

  repeated DomainGraphicListener listeners = 12;
}

// +gogo:genproto=true
message DomainGraphicsSDLGL {
  optional string enable = 1;
}

// +gogo:genproto=true
message DomainHostdev {
  optional string managed = 1;

  optional DomainHostdevSubsysUSB usb = 2;

  optional DomainHostdevSubsysSCSI scsi = 3;

  optional DomainHostdevSubsysSCSIHost scsiHost = 4;

  optional DomainHostdevSubsysPCI pci = 5;

  optional DomainHostdevSubsysMDev mdev = 6;

  optional DomainHostdevCapsStorage storage = 7;

  optional DomainHostdevCapsMisc misc = 8;

  optional DomainHostdevCapsNet net = 9;

  optional DomainDeviceBoot boot = 10;

  optional DomainROM rom = 11;

  optional DomainDeviceACPI acpi = 12;

  optional DomainAlias alias = 13;

  optional DomainAddress address = 14;
}

// +gogo:genproto=true
message DomainHostdevCapsMisc {
  optional DomainHostdevCapsMiscSource source = 1;
}

// +gogo:genproto=true
message DomainHostdevCapsMiscSource {
  optional string char = 1;
}

// +gogo:genproto=true
message DomainHostdevCapsNet {
  optional DomainHostdevCapsNetSource source = 1;

  repeated DomainIP ip = 2;

  repeated DomainRoute route = 3;
}

// +gogo:genproto=true
message DomainHostdevCapsNetSource {
  optional string interface = 1;
}

// +gogo:genproto=true
message DomainHostdevCapsStorage {
  optional DomainHostdevCapsStorageSource source = 1;
}

// +gogo:genproto=true
message DomainHostdevCapsStorageSource {
  optional string block = 1;
}

// +gogo:genproto=true
message DomainHostdevSubsysMDev {
  optional string model = 1;

  optional string display = 2;

  optional string ramfb = 3;

  optional DomainHostdevSubsysMDevSource source = 4;
}

// +gogo:genproto=true
message DomainHostdevSubsysMDevSource {
  optional DomainAddressMDev address = 1;
}

// +gogo:genproto=true
message DomainHostdevSubsysPCI {
  optional DomainHostdevSubsysPCIDriver driver = 1;

  optional DomainHostdevSubsysPCISource source = 2;

  optional DomainInterfaceTeaming teaming = 3;
}

// +gogo:genproto=true
message DomainHostdevSubsysPCIDriver {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainHostdevSubsysPCISource {
  optional string writeFiltering = 1;

  optional DomainAddressPCI address = 2;
}

// +gogo:genproto=true
message DomainHostdevSubsysSCSI {
  optional string sgio = 1;

  optional string rawio = 2;

  optional DomainHostdevSubsysSCSISource source = 3;

  optional DomainDiskReadOnly readonly = 4;

  optional DomainDiskShareable shareable = 5;
}

// +gogo:genproto=true
message DomainHostdevSubsysSCSIAdapter {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainHostdevSubsysSCSIHost {
  optional string model = 1;

  optional DomainHostdevSubsysSCSIHostSource source = 2;
}

// +gogo:genproto=true
message DomainHostdevSubsysSCSIHostSource {
  optional string protocol = 1;

  optional string wwpn = 2;
}

// +gogo:genproto=true
message DomainHostdevSubsysSCSISource {
  optional DomainHostdevSubsysSCSISourceHost host = 1;

  optional DomainHostdevSubsysSCSISourceISCSI iscsi = 2;
}

// +gogo:genproto=true
message DomainHostdevSubsysSCSISourceHost {
  optional DomainHostdevSubsysSCSIAdapter adapter = 1;

  optional DomainAddressDrive address = 2;
}

// +gogo:genproto=true
message DomainHostdevSubsysSCSISourceIQN {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainHostdevSubsysSCSISourceISCSI {
  optional string name = 1;

  repeated DomainDiskSourceHost host = 2;

  optional DomainDiskAuth auth = 3;

  optional DomainHostdevSubsysSCSISourceInitiator initiator = 4;
}

// +gogo:genproto=true
message DomainHostdevSubsysSCSISourceInitiator {
  optional DomainHostdevSubsysSCSISourceIQN iqn = 1;
}

// +gogo:genproto=true
message DomainHostdevSubsysUSB {
  optional DomainHostdevSubsysUSBSource source = 1;
}

// +gogo:genproto=true
message DomainHostdevSubsysUSBSource {
  optional DomainAddressUSB address = 1;
}

// +gogo:genproto=true
message DomainHub {
  optional string type = 1;

  optional DomainDeviceACPI acpi = 2;

  optional DomainAlias alias = 3;

  optional DomainAddress address = 4;
}

// +gogo:genproto=true
message DomainIDMap {
  repeated DomainIDMapRange uid = 1;

  repeated DomainIDMapRange gid = 2;
}

// +gogo:genproto=true
message DomainIDMapRange {
  optional uint64 start = 1;

  optional uint64 target = 2;

  optional uint64 count = 3;
}

// +gogo:genproto=true
message DomainIOMMU {
  optional string model = 1;

  optional DomainIOMMUDriver driver = 2;
}

// +gogo:genproto=true
message DomainIOMMUDriver {
  optional string intremap = 1;

  optional string cachingMode = 2;

  optional string eim = 3;

  optional string iotlb = 4;

  optional uint64 awBits = 5;
}

// +gogo:genproto=true
message DomainIOThread {
  optional uint64 id = 1;
}

// +gogo:genproto=true
message DomainIOThreadIDs {
  repeated DomainIOThread iothreads = 1;
}

// +gogo:genproto=true
message DomainIP {
  optional string address = 1;

  optional string family = 2;

  optional uint64 prefix = 3;
}

// +gogo:genproto=true
message DomainInput {
  optional string type = 1;

  optional string bus = 2;

  optional string model = 3;

  optional DomainInputDriver driver = 4;

  optional DomainInputSource source = 5;

  optional DomainDeviceACPI acpi = 6;

  optional DomainAlias alias = 7;

  optional DomainAddress address = 8;
}

// +gogo:genproto=true
message DomainInputDriver {
  optional string iommu = 1;

  optional string ats = 2;

  optional string packed = 3;
}

// +gogo:genproto=true
message DomainInputSource {
  optional string evdev = 1;
}

// +gogo:genproto=true
message DomainInterface {
  optional string managed = 1;

  optional string trustGuestRxFilters = 2;

  optional DomainInterfaceMAC mac = 3;

  optional DomainInterfaceSource source = 4;

  optional DomainDeviceBoot boot = 5;

  optional DomainInterfaceVLan vlan = 6;

  optional DomainInterfaceVirtualPort virtualPort = 7;

  repeated DomainInterfaceIP ip = 8;

  repeated DomainInterfaceRoute route = 9;

  optional DomainInterfaceScript script = 10;

  optional DomainInterfaceScript downscript = 11;

  optional DomainBackendDomain backenddomain = 12;

  optional DomainInterfaceTarget target = 13;

  optional DomainInterfaceGuest guest = 14;

  optional DomainInterfaceModel model = 15;

  optional DomainInterfaceDriver driver = 16;

  optional DomainInterfaceBackend backend = 17;

  optional DomainInterfaceFilterRef filterref = 18;

  optional DomainInterfaceTune tune = 19;

  optional DomainInterfaceTeaming teaming = 20;

  optional DomainInterfaceLink link = 21;

  optional DomainInterfaceMTU mtu = 22;

  optional DomainInterfaceBandwidth bandwidth = 23;

  optional DomainInterfacePortOptions portOptions = 24;

  optional DomainInterfaceCoalesce coalesce = 25;

  optional DomainROM rom = 26;

  optional DomainDeviceACPI acpi = 27;

  optional DomainAlias alias = 28;

  optional DomainAddress address = 29;
}

// +gogo:genproto=true
message DomainInterfaceBackend {
  optional string tap = 1;

  optional string vhost = 2;
}

// +gogo:genproto=true
message DomainInterfaceBandwidth {
  optional DomainInterfaceBandwidthParams inbound = 1;

  optional DomainInterfaceBandwidthParams outbound = 2;
}

// +gogo:genproto=true
message DomainInterfaceBandwidthParams {
  optional int64 average = 1;

  optional int64 peak = 2;

  optional int64 burst = 3;

  optional int64 floor = 4;
}

// +gogo:genproto=true
message DomainInterfaceCoalesce {
  optional DomainInterfaceCoalesceRX rx = 1;
}

// +gogo:genproto=true
message DomainInterfaceCoalesceRX {
  optional DomainInterfaceCoalesceRXFrames frames = 1;
}

// +gogo:genproto=true
message DomainInterfaceCoalesceRXFrames {
  optional uint64 max = 1;
}

// +gogo:genproto=true
message DomainInterfaceDriver {
  optional string name = 1;

  optional string txMode = 2;

  optional string ioeventfd = 3;

  optional string eventIdx = 4;

  optional uint64 queues = 5;

  optional uint64 rxQueueSize = 6;

  optional uint64 txQueueSize = 7;

  optional string iommu = 8;

  optional string ats = 9;

  optional string packed = 10;

  optional DomainInterfaceDriverHost host = 11;

  optional DomainInterfaceDriverGuest guest = 12;
}

// +gogo:genproto=true
message DomainInterfaceDriverGuest {
  optional string csum = 1;

  optional string tso4 = 2;

  optional string tso6 = 3;

  optional string ecn = 4;

  optional string ufo = 5;
}

// +gogo:genproto=true
message DomainInterfaceDriverHost {
  optional string csum = 1;

  optional string gso = 2;

  optional string tso4 = 3;

  optional string tso6 = 4;

  optional string ecn = 5;

  optional string ufo = 6;

  optional string mrgRxBuf = 7;
}

// +gogo:genproto=true
message DomainInterfaceFilterParam {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message DomainInterfaceFilterRef {
  optional string filter = 1;

  repeated DomainInterfaceFilterParam parameter = 2;
}

// +gogo:genproto=true
message DomainInterfaceGuest {
  optional string dev = 1;

  optional string actual = 2;
}

// +gogo:genproto=true
message DomainInterfaceIP {
  optional string address = 1;

  optional string family = 2;

  optional uint64 prefix = 3;

  optional string peer = 4;
}

// +gogo:genproto=true
message DomainInterfaceLink {
  optional string state = 1;
}

// +gogo:genproto=true
message DomainInterfaceMAC {
  optional string address = 1;

  optional string type = 2;

  optional string check = 3;
}

// +gogo:genproto=true
message DomainInterfaceMTU {
  optional uint64 size = 1;
}

// +gogo:genproto=true
message DomainInterfaceModel {
  optional string type = 1;
}

// +gogo:genproto=true
message DomainInterfacePortOptions {
  optional string isolated = 1;
}

// +gogo:genproto=true
message DomainInterfaceRoute {
  optional string family = 1;

  optional string address = 2;

  optional string netmask = 3;

  optional uint64 prefix = 4;

  optional string gateway = 5;

  optional uint64 metric = 6;
}

// +gogo:genproto=true
message DomainInterfaceScript {
  optional string path = 1;
}

// +gogo:genproto=true
message DomainInterfaceSource {
  optional DomainInterfaceSourceUser user = 1;

  optional DomainInterfaceSourceEthernet ethernet = 2;

  optional DomainChardevSource vHostUser = 3;

  optional DomainInterfaceSourceServer server = 4;

  optional DomainInterfaceSourceClient client = 5;

  optional DomainInterfaceSourceMCast mcast = 6;

  optional DomainInterfaceSourceNetwork network = 7;

  optional DomainInterfaceSourceBridge bridge = 8;

  optional DomainInterfaceSourceInternal internal = 9;

  optional DomainInterfaceSourceDirect direct = 10;

  optional DomainInterfaceSourceHostdev hostdev = 11;

  optional DomainInterfaceSourceUDP udp = 12;

  optional DomainInterfaceSourceVDPA vdpa = 13;
}

// +gogo:genproto=true
message DomainInterfaceSourceBridge {
  optional string bridge = 1;
}

// +gogo:genproto=true
message DomainInterfaceSourceClient {
  optional string address = 1;

  optional uint64 port = 2;

  optional DomainInterfaceSourceLocal local = 3;
}

// +gogo:genproto=true
message DomainInterfaceSourceDirect {
  optional string dev = 1;

  optional string mode = 2;
}

// +gogo:genproto=true
message DomainInterfaceSourceEthernet {
  repeated DomainInterfaceIP ip = 1;

  repeated DomainInterfaceRoute route = 2;
}

// +gogo:genproto=true
message DomainInterfaceSourceHostdev {
  optional DomainHostdevSubsysPCISource pci = 1;

  optional DomainHostdevSubsysUSBSource usb = 2;
}

// +gogo:genproto=true
message DomainInterfaceSourceInternal {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainInterfaceSourceLocal {
  optional string address = 1;

  optional uint64 port = 2;
}

// +gogo:genproto=true
message DomainInterfaceSourceMCast {
  optional string address = 1;

  optional uint64 port = 2;

  optional DomainInterfaceSourceLocal local = 3;
}

// +gogo:genproto=true
message DomainInterfaceSourceNetwork {
  optional string network = 1;

  optional string portGroup = 2;

  optional string bridge = 3;

  optional string portId = 4;
}

// +gogo:genproto=true
message DomainInterfaceSourceServer {
  optional string address = 1;

  optional uint64 port = 2;

  optional DomainInterfaceSourceLocal local = 3;
}

// +gogo:genproto=true
message DomainInterfaceSourceUDP {
  optional string address = 1;

  optional uint64 port = 2;

  optional DomainInterfaceSourceLocal local = 3;
}

// +gogo:genproto=true
message DomainInterfaceSourceUser {
}

// +gogo:genproto=true
message DomainInterfaceSourceVDPA {
  optional string device = 1;
}

// +gogo:genproto=true
message DomainInterfaceTarget {
  optional string dev = 1;

  optional string managed = 2;
}

// +gogo:genproto=true
message DomainInterfaceTeaming {
  optional string type = 1;

  optional string persistent = 2;
}

// +gogo:genproto=true
message DomainInterfaceTune {
  optional uint64 sndbuf = 1;
}

// +gogo:genproto=true
message DomainInterfaceVLan {
  optional string trunk = 1;

  repeated DomainInterfaceVLanTag tags = 2;
}

// +gogo:genproto=true
message DomainInterfaceVLanTag {
  optional uint64 id = 1;

  optional string nativeMode = 2;
}

// +gogo:genproto=true
message DomainInterfaceVirtualPort {
  optional DomainInterfaceVirtualPortParams parameters = 1;
}

// +gogo:genproto=true
message DomainInterfaceVirtualPortParams {
  optional DomainInterfaceVirtualPortParamsAny any = 1;

  optional DomainInterfaceVirtualPortParamsVEPA8021QBG vepa8021_qbg = 2;

  optional DomainInterfaceVirtualPortParamsVNTag8021QBH vntag8011_qbh = 3;

  optional DomainInterfaceVirtualPortParamsOpenVSwitch openvswitch = 4;

  optional DomainInterfaceVirtualPortParamsMidoNet midonet = 5;
}

// +gogo:genproto=true
message DomainInterfaceVirtualPortParamsAny {
  optional uint64 managerId = 1;

  optional uint64 typeId = 2;

  optional uint64 typeIdVersion = 3;

  optional string instanceId = 4;

  optional string profileId = 5;

  optional string interfaceId = 6;
}

// +gogo:genproto=true
message DomainInterfaceVirtualPortParamsMidoNet {
  optional string interfaceId = 1;
}

// +gogo:genproto=true
message DomainInterfaceVirtualPortParamsOpenVSwitch {
  optional string interfaceId = 1;

  optional string profileId = 2;
}

// +gogo:genproto=true
message DomainInterfaceVirtualPortParamsVEPA8021QBG {
  optional uint64 managerId = 1;

  optional uint64 typeId = 2;

  optional uint64 typeIdVersion = 3;

  optional string instanceId = 4;
}

// +gogo:genproto=true
message DomainInterfaceVirtualPortParamsVNTag8021QBH {
  optional string profileId = 1;
}

// +gogo:genproto=true
message DomainKeyWrap {
  repeated DomainKeyWrapCipher ciphers = 1;
}

// +gogo:genproto=true
message DomainKeyWrapCipher {
  optional string name = 1;

  optional string state = 2;
}

// +gogo:genproto=true
message DomainLXCNamespace {
  optional DomainLXCNamespaceMap sharenet = 1;

  optional DomainLXCNamespaceMap shareipc = 2;

  optional DomainLXCNamespaceMap shareuts = 3;
}

// +gogo:genproto=true
message DomainLXCNamespaceMap {
  optional string type = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message DomainLaunchSecurity {
  optional DomainLaunchSecuritySEV sev = 1;
}

// +gogo:genproto=true
message DomainLaunchSecuritySEV {
  optional uint64 cBitPos = 1;

  optional uint64 reducedPhysBits = 2;

  optional uint64 policy = 3;

  optional string dh_cert = 4;

  optional string session = 5;
}

// +gogo:genproto=true
message DomainLease {
  optional string lockspace = 1;

  optional string key = 2;

  optional DomainLeaseTarget target = 3;
}

// +gogo:genproto=true
message DomainLeaseTarget {
  optional string path = 1;

  optional uint64 offset = 2;
}

// +gogo:genproto=true
message DomainLoader {
  optional string path = 1;

  optional string readonly = 2;

  optional string secure = 3;

  optional string type = 4;
}

// +gogo:genproto=true
message DomainMaxMemory {
  optional uint64 value = 1;

  optional string unit = 2;

  optional uint64 slots = 3;
}

// +gogo:genproto=true
message DomainMemBalloon {
  optional string model = 1;

  optional string autodeflate = 2;

  optional string freePageReporting = 3;

  optional DomainMemBalloonDriver driver = 4;

  optional DomainMemBalloonStats stats = 5;

  optional DomainDeviceACPI acpi = 6;

  optional DomainAlias alias = 7;

  optional DomainAddress address = 8;
}

// +gogo:genproto=true
message DomainMemBalloonDriver {
  optional string iommu = 1;

  optional string ats = 2;

  optional string packed = 3;
}

// +gogo:genproto=true
message DomainMemBalloonStats {
  optional uint64 period = 1;
}

// +gogo:genproto=true
message DomainMemory {
  optional uint64 value = 1;

  optional string unit = 2;

  optional string dumpCore = 3;
}

// +gogo:genproto=true
message DomainMemoryAccess {
  optional string mode = 1;
}

// +gogo:genproto=true
message DomainMemoryAllocation {
  optional string mode = 1;
}

// +gogo:genproto=true
message DomainMemoryBacking {
  optional DomainMemoryHugepages memoryHugePages = 1;

  optional DomainMemoryNosharepages memoryNosharepages = 2;

  optional DomainMemoryLocked memoryLocked = 3;

  optional DomainMemorySource memorySource = 4;

  optional DomainMemoryAccess memoryAccess = 5;

  optional DomainMemoryAllocation memoryAllocation = 6;

  optional DomainMemoryDiscard memoryDiscard = 7;
}

// +gogo:genproto=true
message DomainMemoryDiscard {
}

// +gogo:genproto=true
message DomainMemoryHugepage {
  optional uint64 size = 4;

  optional string unit = 2;

  optional string nodeset = 3;
}

// +gogo:genproto=true
message DomainMemoryHugepages {
  repeated DomainMemoryHugepage hugepages = 1;
}

// +gogo:genproto=true
message DomainMemoryLocked {
}

// +gogo:genproto=true
message DomainMemoryNosharepages {
}

// +gogo:genproto=true
message DomainMemorySource {
  optional string type = 1;
}

// +gogo:genproto=true
message DomainMemoryTune {
  optional DomainMemoryTuneLimit hardLimit = 1;

  optional DomainMemoryTuneLimit softLimit = 2;

  optional DomainMemoryTuneLimit minGuarantee = 3;

  optional DomainMemoryTuneLimit swapHardLimit = 4;
}

// +gogo:genproto=true
message DomainMemoryTuneLimit {
  optional uint64 value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainMemorydev {
  optional string model = 1;

  optional string access = 2;

  optional string discard = 3;

  optional string uuid = 4;

  optional DomainMemorydevSource source = 5;

  optional DomainMemorydevTarget target = 6;

  optional DomainDeviceACPI acpi = 7;

  optional DomainAlias alias = 8;

  optional DomainAddress address = 9;
}

// +gogo:genproto=true
message DomainMemorydevSource {
  optional string nodeMask = 1;

  optional DomainMemorydevSourcePagesize pageSize = 2;

  optional string path = 3;

  optional DomainMemorydevSourceAlignsize alignSize = 4;

  optional DomainMemorydevSourcePMem pmem = 5;
}

// +gogo:genproto=true
message DomainMemorydevSourceAlignsize {
  optional uint64 value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainMemorydevSourcePMem {
}

// +gogo:genproto=true
message DomainMemorydevSourcePagesize {
  optional uint64 value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainMemorydevTarget {
  optional DomainMemorydevTargetSize size = 5;

  optional DomainMemorydevTargetNode node = 2;

  optional DomainMemorydevTargetLabel label = 3;

  optional DomainMemorydevTargetReadOnly readonly = 4;
}

// +gogo:genproto=true
message DomainMemorydevTargetLabel {
  optional DomainMemorydevTargetSize size = 1;
}

// +gogo:genproto=true
message DomainMemorydevTargetNode {
  optional uint64 value = 1;
}

// +gogo:genproto=true
message DomainMemorydevTargetReadOnly {
}

// +gogo:genproto=true
message DomainMemorydevTargetSize {
  optional uint64 value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainMetadata {
  optional string xML = 1;
}

// +gogo:genproto=true
message DomainNUMAInterconnectBandwidth {
  optional uint64 initiator = 1;

  optional uint64 target = 2;

  optional string type = 3;

  optional uint64 value = 4;

  optional string unit = 5;
}

// +gogo:genproto=true
message DomainNUMAInterconnectLatency {
  optional uint64 initiator = 1;

  optional uint64 target = 2;

  optional uint64 cache = 3;

  optional string type = 4;

  optional uint64 value = 5;
}

// +gogo:genproto=true
message DomainNUMAInterconnects {
  repeated DomainNUMAInterconnectLatency latencies = 1;

  repeated DomainNUMAInterconnectBandwidth bandwidths = 2;
}

// +gogo:genproto=true
message DomainNUMATune {
  optional DomainNUMATuneMemory memory = 1;

  repeated DomainNUMATuneMemNode memNodes = 2;
}

// +gogo:genproto=true
message DomainNUMATuneMemNode {
  optional uint64 cellId = 1;

  optional string mode = 2;

  optional string nodeset = 3;
}

// +gogo:genproto=true
message DomainNUMATuneMemory {
  optional string mode = 1;

  optional string nodeset = 2;

  optional string placement = 3;
}

// +gogo:genproto=true
message DomainNVRAM {
  optional DomainDeviceACPI acpi = 1;

  optional DomainAlias alias = 2;

  optional DomainAddress address = 3;
}

// +gogo:genproto=true
message DomainNVRam {
  optional string nvram = 1;

  optional string template = 2;
}

// +gogo:genproto=true
message DomainNuma {
  repeated DomainCell cell = 1;

  optional DomainNUMAInterconnects interconnects = 2;
}

// +gogo:genproto=true
message DomainOS {
  optional DomainOSType type = 1;

  optional string firmware = 2;

  optional DomainOSFirmwareInfo firmwareInfo = 3;

  optional string init = 4;

  repeated string initargs = 5;

  repeated DomainOSInitEnv initenv = 6;

  optional string initdir = 7;

  optional string inituser = 8;

  optional string initgroup = 9;

  optional DomainLoader loader = 10;

  optional DomainNVRam nvram = 11;

  optional string kernel = 12;

  optional string initrd = 13;

  optional string cmdline = 14;

  optional string dtb = 15;

  optional DomainACPI acpi = 16;

  repeated DomainBootDevice bootDevices = 17;

  optional DomainBootMenu bootMenu = 18;

  optional DomainBIOS bios = 19;

  optional DomainSMBios smbios = 20;
}

// +gogo:genproto=true
message DomainOSFirmwareFeature {
  optional string enabled = 1;

  optional string name = 2;
}

// +gogo:genproto=true
message DomainOSFirmwareInfo {
  repeated DomainOSFirmwareFeature features = 1;
}

// +gogo:genproto=true
message DomainOSInitEnv {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message DomainOSType {
  optional string arch = 1;

  optional string machine = 2;

  optional string type = 3;
}

// +gogo:genproto=true
message DomainPM {
  optional DomainPMPolicy suspendToMem = 1;

  optional DomainPMPolicy suspendToDisk = 2;
}

// +gogo:genproto=true
message DomainPMPolicy {
  optional string enabled = 1;
}

// +gogo:genproto=true
message DomainPanic {
  optional string model = 1;

  optional DomainDeviceACPI acpi = 2;

  optional DomainAlias alias = 3;

  optional DomainAddress address = 4;
}

// +gogo:genproto=true
message DomainParallel {
  optional DomainChardevSource source = 1;

  optional DomainChardevProtocol protocol = 2;

  optional DomainParallelTarget target = 3;

  optional DomainChardevLog log = 4;

  optional DomainDeviceACPI acpi = 5;

  optional DomainAlias alias = 6;

  optional DomainAddress address = 7;
}

// +gogo:genproto=true
message DomainParallelTarget {
  optional string type = 1;

  optional uint64 port = 2;
}

// +gogo:genproto=true
message DomainPerf {
  repeated DomainPerfEvent events = 1;
}

// +gogo:genproto=true
message DomainPerfEvent {
  optional string name = 1;

  optional string enabled = 2;
}

// +gogo:genproto=true
message DomainQEMUCapabilities {
  repeated DomainQEMUCapabilitiesEntry add = 1;

  repeated DomainQEMUCapabilitiesEntry del = 2;
}

// +gogo:genproto=true
message DomainQEMUCapabilitiesEntry {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainQEMUCommandline {
  repeated DomainQEMUCommandlineArg args = 1;

  repeated DomainQEMUCommandlineEnv envs = 2;
}

// +gogo:genproto=true
message DomainQEMUCommandlineArg {
  optional string value = 1;
}

// +gogo:genproto=true
message DomainQEMUCommandlineEnv {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message DomainQEMUDeprecation {
  optional string behavior = 1;
}

// +gogo:genproto=true
message DomainRNG {
  optional string model = 1;

  optional DomainRNGDriver driver = 2;

  optional DomainRNGRate rate = 3;

  optional DomainRNGBackend backend = 4;

  optional DomainDeviceACPI acpi = 5;

  optional DomainAlias alias = 6;

  optional DomainAddress address = 7;
}

// +gogo:genproto=true
message DomainRNGBackend {
  optional DomainRNGBackendRandom random = 1;

  optional DomainRNGBackendEGD egd = 2;

  optional DomainRNGBackendBuiltIn builtin = 3;
}

// +gogo:genproto=true
message DomainRNGBackendBuiltIn {
}

// +gogo:genproto=true
message DomainRNGBackendEGD {
  optional DomainChardevSource source = 1;

  optional DomainChardevProtocol protocol = 2;
}

// +gogo:genproto=true
message DomainRNGBackendRandom {
  optional string device = 1;
}

// +gogo:genproto=true
message DomainRNGDriver {
  optional string iommu = 1;

  optional string ats = 2;

  optional string packed = 3;
}

// +gogo:genproto=true
message DomainRNGRate {
  optional uint64 bytes = 1;

  optional uint64 period = 2;
}

// +gogo:genproto=true
message DomainROM {
  optional string bar = 1;

  optional string file = 2;

  optional string enabled = 3;
}

// +gogo:genproto=true
message DomainRedirDev {
  optional string bus = 1;

  optional DomainChardevSource source = 2;

  optional DomainChardevProtocol protocol = 3;

  optional DomainDeviceBoot boot = 4;

  optional DomainDeviceACPI acpi = 5;

  optional DomainAlias alias = 6;

  optional DomainAddress address = 7;
}

// +gogo:genproto=true
message DomainRedirFilter {
  repeated DomainRedirFilterUSB usb = 1;
}

// +gogo:genproto=true
message DomainRedirFilterUSB {
  optional uint64 class = 1;

  optional uint64 vendor = 2;

  optional uint64 product = 3;

  optional string version = 4;

  optional string allow = 5;
}

// +gogo:genproto=true
message DomainResource {
  optional string partition = 1;
}

// +gogo:genproto=true
message DomainRoute {
  optional string family = 1;

  optional string address = 2;

  optional string gateway = 3;
}

// +gogo:genproto=true
message DomainSMBios {
  optional string mode = 1;
}

// +gogo:genproto=true
message DomainSecLabel {
  optional string type = 1;

  optional string model = 2;

  optional string relabel = 3;

  optional string label = 4;

  optional string imageLabel = 5;

  optional string baseLabel = 6;
}

// +gogo:genproto=true
message DomainSerial {
  optional DomainChardevSource source = 1;

  optional DomainChardevProtocol protocol = 2;

  optional DomainSerialTarget target = 3;

  optional DomainChardevLog log = 4;

  optional DomainDeviceACPI acpi = 5;

  optional DomainAlias alias = 6;

  optional DomainAddress address = 7;
}

// +gogo:genproto=true
message DomainSerialTarget {
  optional string type = 1;

  optional uint64 port = 2;

  optional DomainSerialTargetModel model = 3;
}

// +gogo:genproto=true
message DomainSerialTargetModel {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainShmem {
  optional string name = 1;

  optional string role = 2;

  optional DomainShmemSize size = 10;

  optional DomainShmemModel model = 4;

  optional DomainShmemServer server = 5;

  optional DomainShmemMSI msi = 6;

  optional DomainDeviceACPI acpi = 7;

  optional DomainAlias alias = 8;

  optional DomainAddress address = 9;
}

// +gogo:genproto=true
message DomainShmemMSI {
  optional string enabled = 1;

  optional uint64 vectors = 2;

  optional string ioeventfd = 3;
}

// +gogo:genproto=true
message DomainShmemModel {
  optional string type = 1;
}

// +gogo:genproto=true
message DomainShmemServer {
  optional string path = 1;
}

// +gogo:genproto=true
message DomainShmemSize {
  optional uint64 value = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message DomainSmartcard {
  optional DomainChardevSource passthrough = 1;

  optional DomainChardevProtocol protocol = 2;

  optional DomainSmartcardHost host = 3;

  repeated DomainSmartcardHostCert certificate = 4;

  optional string database = 5;

  optional DomainDeviceACPI acpi = 6;

  optional DomainAlias alias = 7;

  optional DomainAddress address = 8;
}

// +gogo:genproto=true
message DomainSmartcardHost {
}

// +gogo:genproto=true
message DomainSmartcardHostCert {
  optional string file = 1;
}

// +gogo:genproto=true
message DomainSnapshot {
  optional string name = 1;

  optional string description = 2;

  optional string state = 3;

  optional string creationTime = 4;

  optional DomainSnapshotParent parent = 5;

  optional DomainSnapshotMemory memory = 6;

  optional DomainSnapshotDisks disks = 7;

  optional Domain domain = 8;

  optional uint64 active = 9;
}

// +gogo:genproto=true
message DomainSnapshotDisk {
  optional string name = 1;

  optional string snapshot = 2;

  optional DomainDiskDriver driver = 3;

  optional DomainDiskSource source = 4;
}

// +gogo:genproto=true
message DomainSnapshotDisks {
  repeated DomainSnapshotDisk disks = 1;
}

// +gogo:genproto=true
message DomainSnapshotMemory {
  optional string snapshot = 1;

  optional string file = 2;
}

// +gogo:genproto=true
message DomainSnapshotParent {
  optional string name = 1;
}

// +gogo:genproto=true
message DomainSound {
  optional string model = 1;

  repeated DomainSoundCodec codec = 2;

  optional DomainSoundAudio audio = 3;

  optional DomainDeviceACPI acpi = 4;

  optional DomainAlias alias = 5;

  optional DomainAddress address = 6;
}

// +gogo:genproto=true
message DomainSoundAudio {
  optional uint64 id = 1;
}

// +gogo:genproto=true
message DomainSoundCodec {
  optional string type = 1;
}

// +gogo:genproto=true
message DomainSysInfo {
  optional DomainSysInfoSMBIOS smbios = 1;

  optional DomainSysInfoFWCfg fwcfg = 2;
}

// +gogo:genproto=true
message DomainSysInfoBIOS {
  repeated DomainSysInfoEntry entry = 1;
}

// +gogo:genproto=true
message DomainSysInfoBaseBoard {
  repeated DomainSysInfoEntry entry = 1;
}

// +gogo:genproto=true
message DomainSysInfoChassis {
  repeated DomainSysInfoEntry entry = 1;
}

// +gogo:genproto=true
message DomainSysInfoEntry {
  optional string name = 1;

  optional string file = 2;

  optional string value = 3;
}

// +gogo:genproto=true
message DomainSysInfoFWCfg {
  repeated DomainSysInfoEntry entry = 1;
}

// +gogo:genproto=true
message DomainSysInfoMemory {
  repeated DomainSysInfoEntry entry = 1;
}

// +gogo:genproto=true
message DomainSysInfoOEMStrings {
  repeated string entry = 1;
}

// +gogo:genproto=true
message DomainSysInfoProcessor {
  repeated DomainSysInfoEntry entry = 1;
}

// +gogo:genproto=true
message DomainSysInfoSMBIOS {
  optional DomainSysInfoBIOS bios = 1;

  optional DomainSysInfoSystem system = 2;

  repeated DomainSysInfoBaseBoard baseBoard = 3;

  optional DomainSysInfoChassis chassis = 4;

  repeated DomainSysInfoProcessor processor = 5;

  repeated DomainSysInfoMemory memory = 6;

  optional DomainSysInfoOEMStrings oemStrings = 7;
}

// +gogo:genproto=true
message DomainSysInfoSystem {
  repeated DomainSysInfoEntry entry = 1;
}

// +gogo:genproto=true
message DomainTPM {
  optional string model = 1;

  optional DomainTPMBackend backend = 2;

  optional DomainDeviceACPI acpi = 3;

  optional DomainAlias alias = 4;

  optional DomainAddress address = 5;
}

// +gogo:genproto=true
message DomainTPMBackend {
  optional DomainTPMBackendPassthrough passthrough = 1;

  optional DomainTPMBackendEmulator emulator = 2;
}

// +gogo:genproto=true
message DomainTPMBackendDevice {
  optional string path = 1;
}

// +gogo:genproto=true
message DomainTPMBackendEmulator {
  optional string version = 1;

  optional DomainTPMBackendEncryption encryption = 2;

  optional string persistentState = 3;
}

// +gogo:genproto=true
message DomainTPMBackendEncryption {
  optional string secret = 1;
}

// +gogo:genproto=true
message DomainTPMBackendPassthrough {
  optional DomainTPMBackendDevice device = 1;
}

// +gogo:genproto=true
message DomainTimer {
  optional string name = 1;

  optional string track = 2;

  optional string tickpolicy = 3;

  optional DomainTimerCatchUp catchup = 4;

  optional uint64 frequency = 5;

  optional string mode = 6;

  optional string present = 7;
}

// +gogo:genproto=true
message DomainTimerCatchUp {
  optional uint64 threshold = 1;

  optional uint64 slew = 2;

  optional uint64 limit = 3;
}

// +gogo:genproto=true
message DomainVCPU {
  optional string placement = 1;

  optional string cpuset = 2;

  optional uint64 current = 3;

  optional uint64 value = 4;
}

// +gogo:genproto=true
message DomainVCPUs {
  repeated DomainVCPUsVCPU vcpu = 1;
}

// +gogo:genproto=true
message DomainVCPUsVCPU {
  optional uint64 id = 1;

  optional string enabled = 2;

  optional string hotpluggable = 3;

  optional uint64 order = 4;
}

// +gogo:genproto=true
message DomainVMWareDataCenterPath {
  optional string value = 1;
}

// +gogo:genproto=true
message DomainVSock {
  optional string model = 1;

  optional DomainVSockCID cid = 2;

  optional DomainVSockDriver driver = 3;

  optional DomainDeviceACPI acpi = 4;

  optional DomainAlias alias = 5;

  optional DomainAddress address = 6;
}

// +gogo:genproto=true
message DomainVSockCID {
  optional string auto = 1;

  optional string address = 2;
}

// +gogo:genproto=true
message DomainVSockDriver {
  optional string iommu = 1;

  optional string ats = 2;

  optional string packed = 3;
}

// +gogo:genproto=true
message DomainVideo {
  optional DomainVideoModel model = 1;

  optional DomainVideoDriver driver = 2;

  optional DomainDeviceACPI acpi = 3;

  optional DomainAlias alias = 4;

  optional DomainAddress address = 5;
}

// +gogo:genproto=true
message DomainVideoAccel {
  optional string accel3d = 1;

  optional string accel2d = 2;

  optional string rendernode = 3;
}

// +gogo:genproto=true
message DomainVideoDriver {
  optional string name = 1;

  optional string vgaconf = 2;

  optional string iommu = 3;

  optional string ats = 4;

  optional string packed = 5;
}

// +gogo:genproto=true
message DomainVideoModel {
  optional string type = 1;

  optional uint64 heads = 2;

  optional uint64 ram = 3;

  optional uint64 vram = 4;

  optional uint64 vram64 = 5;

  optional uint64 vgamem = 6;

  optional string primary = 7;

  optional DomainVideoAccel accel = 8;

  optional DomainVideoResolution resolution = 9;
}

// +gogo:genproto=true
message DomainVideoResolution {
  optional uint64 x = 1;

  optional uint64 y = 2;
}

// +gogo:genproto=true
message DomainWatchdog {
  optional string model = 1;

  optional string action = 2;

  optional DomainDeviceACPI acpi = 3;

  optional DomainAlias alias = 4;

  optional DomainAddress address = 5;
}

// +gogo:genproto=true
message DomainXenCommandline {
  repeated DomainXenCommandlineArg args = 1;
}

// +gogo:genproto=true
message DomainXenCommandlineArg {
  optional string value = 1;
}

// +gogo:genproto=true
message Empty {
}

// +gogo:genproto=true
message Interface {
  optional string name = 1;

  optional InterfaceStart start = 2;

  optional InterfaceMTU mtu = 3;

  repeated InterfaceProtocol protocol = 4;

  optional InterfaceLink link = 5;

  optional InterfaceMAC mac = 6;

  optional InterfaceBond bond = 7;

  optional InterfaceBridge bridge = 8;

  optional InterfaceVLAN vlan = 9;
}

// +gogo:genproto=true
message InterfaceAutoConf {
}

// +gogo:genproto=true
message InterfaceBond {
  optional string mode = 1;

  optional InterfaceBondARPMon arpmon = 2;

  optional InterfaceBondMIIMon miimon = 3;

  repeated Interface interfaces = 4;
}

// +gogo:genproto=true
message InterfaceBondARPMon {
  optional uint64 interval = 1;

  optional string target = 2;

  optional string validate = 3;
}

// +gogo:genproto=true
message InterfaceBondMIIMon {
  optional uint64 freq = 1;

  optional uint64 updelay = 2;

  optional string carrier = 3;
}

// +gogo:genproto=true
message InterfaceBridge {
  optional string stp = 1;

  optional double delay = 2;

  repeated Interface interfaces = 3;
}

// +gogo:genproto=true
message InterfaceDHCP {
  optional string peerDNS = 1;
}

// +gogo:genproto=true
message InterfaceIP {
  optional string address = 1;

  optional uint64 prefix = 2;
}

// +gogo:genproto=true
message InterfaceLink {
  optional uint64 speed = 1;

  optional string state = 2;
}

// +gogo:genproto=true
message InterfaceMAC {
  optional string address = 1;
}

// +gogo:genproto=true
message InterfaceMTU {
  optional uint64 size = 1;
}

// +gogo:genproto=true
message InterfaceProtocol {
  optional string family = 1;

  optional InterfaceAutoConf autoConf = 2;

  optional InterfaceDHCP dhcp = 3;

  repeated InterfaceIP ip = 4;

  repeated InterfaceRoute route = 5;
}

// +gogo:genproto=true
message InterfaceRoute {
  optional string gateway = 1;
}

// +gogo:genproto=true
message InterfaceStart {
  optional string mode = 1;
}

// +gogo:genproto=true
message InterfaceVLAN {
  optional uint64 tag = 1;

  optional Interface interface = 2;
}

// +gogo:genproto=true
message NWFilter {
  optional string name = 1;

  optional string uuid = 2;

  optional string chain = 3;

  optional int64 priority = 4;

  repeated NWFilterEntry entries = 5;
}

// +gogo:genproto=true
message NWFilterBinding {
  optional NWFilterBindingOwner owner = 1;

  optional NWFilterBindingPortDev portDev = 2;

  optional NWFilterBindingMAC mac = 3;

  optional NWFilterBindingFilterRef filterref = 4;
}

// +gogo:genproto=true
message NWFilterBindingFilterParam {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message NWFilterBindingFilterRef {
  optional string filter = 1;

  repeated NWFilterBindingFilterParam parameters = 2;
}

// +gogo:genproto=true
message NWFilterBindingMAC {
  optional string address = 1;
}

// +gogo:genproto=true
message NWFilterBindingOwner {
  optional string uuid = 1;

  optional string name = 2;
}

// +gogo:genproto=true
message NWFilterBindingPortDev {
  optional string name = 1;
}

// +gogo:genproto=true
message NWFilterEntry {
  optional NWFilterRule rule = 1;

  optional NWFilterRef ref = 2;
}

// +gogo:genproto=true
message NWFilterField {
  optional string var = 1;

  optional string str = 2;

  optional uint64 uint = 3;
}

// +gogo:genproto=true
message NWFilterParameter {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message NWFilterRef {
  optional string filter = 1;

  repeated NWFilterParameter parameters = 2;
}

// +gogo:genproto=true
message NWFilterRule {
  optional string action = 1;

  optional string direction = 2;

  optional int64 priority = 3;

  optional string statematch = 4;

  optional NWFilterRuleARP arp = 5;

  optional NWFilterRuleRARP rarp = 6;

  optional NWFilterRuleMAC mac = 7;

  optional NWFilterRuleVLAN vlan = 8;

  optional NWFilterRuleSTP stp = 9;

  optional NWFilterRuleIP ip = 10;

  optional NWFilterRuleIPv6 ipv6 = 11;

  optional NWFilterRuleTCP tcp = 12;

  optional NWFilterRuleUDP udp = 13;

  optional NWFilterRuleUDPLite udplite = 14;

  optional NWFilterRuleESP esp = 15;

  optional NWFilterRuleAH ah = 16;

  optional NWFilterRuleSCTP sctp = 17;

  optional NWFilterRuleICMP icmp = 18;

  optional NWFilterRuleAll all = 19;

  optional NWFilterRuleIGMP igmp = 20;

  optional NWFilterRuleTCPIPv6 tcpipv6 = 21;

  optional NWFilterRuleUDPIPv6 udpipv6 = 22;

  optional NWFilterRuleUDPLiteIPv6 udpliteipv6 = 23;

  optional NWFilterRuleESPIPv6 espipv6 = 24;

  optional NWFilterRuleAHIPv6 ahipv6 = 25;

  optional NWFilterRuleSCTPIPv6 sctpipv6 = 26;

  optional NWFilterRuleICMPIPv6 icmpv6 = 27;

  optional NWFilterRuleAllIPv6 allipv6 = 28;
}

// +gogo:genproto=true
message NWFilterRuleAH {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional string comment = 3;
}

// +gogo:genproto=true
message NWFilterRuleAHIPv6 {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional string comment = 3;
}

// +gogo:genproto=true
message NWFilterRuleARP {
  optional string match = 1;

  optional NWFilterRuleCommonMAC nWFilterRuleCommonMAC = 2;

  optional NWFilterField hwType = 3;

  optional NWFilterField protocolType = 4;

  optional NWFilterField opCode = 5;

  optional NWFilterField arpSrcMacAddr = 6;

  optional NWFilterField arpDstMacAddr = 7;

  optional NWFilterField arpSrcIpAddr = 8;

  optional NWFilterField arpSrcIpMask = 9;

  optional NWFilterField arpDstIpAddr = 10;

  optional NWFilterField arpDstIpMask = 11;

  optional NWFilterField gratuitous = 12;

  optional string comment = 13;
}

// +gogo:genproto=true
message NWFilterRuleAll {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional string comment = 3;
}

// +gogo:genproto=true
message NWFilterRuleAllIPv6 {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional string comment = 3;
}

// +gogo:genproto=true
message NWFilterRuleCommonIP {
  optional NWFilterField srcMacAddr = 1;

  optional NWFilterField srcIpAddr = 2;

  optional NWFilterField srcIpMask = 3;

  optional NWFilterField dstIpAddr = 4;

  optional NWFilterField dstIpMask = 5;

  optional NWFilterField srcIpFrom = 6;

  optional NWFilterField srcIpTo = 7;

  optional NWFilterField dstIpFrom = 8;

  optional NWFilterField dstIpTo = 9;

  optional NWFilterField dscp = 10;

  optional NWFilterField connLimitAbove = 11;

  optional NWFilterField state = 12;

  optional NWFilterField ipSet = 13;

  optional NWFilterField ipSetFlags = 14;
}

// +gogo:genproto=true
message NWFilterRuleCommonMAC {
  optional NWFilterField srcMacAddr = 1;

  optional NWFilterField srcMacMask = 2;

  optional NWFilterField dstMacAddr = 3;

  optional NWFilterField dstMacMask = 4;
}

// +gogo:genproto=true
message NWFilterRuleCommonPort {
  optional NWFilterField srcPortStart = 1;

  optional NWFilterField srcPortEnd = 2;

  optional NWFilterField dstPortStart = 3;

  optional NWFilterField dstPortEnd = 4;
}

// +gogo:genproto=true
message NWFilterRuleESP {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional string comment = 3;
}

// +gogo:genproto=true
message NWFilterRuleESPIPv6 {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional string comment = 3;
}

// +gogo:genproto=true
message NWFilterRuleICMP {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional NWFilterField type = 3;

  optional NWFilterField code = 4;

  optional string comment = 5;
}

// +gogo:genproto=true
message NWFilterRuleICMPIPv6 {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional NWFilterField type = 3;

  optional NWFilterField code = 4;

  optional string comment = 5;
}

// +gogo:genproto=true
message NWFilterRuleIGMP {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional string comment = 3;
}

// +gogo:genproto=true
message NWFilterRuleIP {
  optional string match = 1;

  optional NWFilterRuleCommonMAC nWFilterRuleCommonMAC = 2;

  optional NWFilterField srcIpAddr = 3;

  optional NWFilterField srcIpMask = 4;

  optional NWFilterField dstIpAddr = 5;

  optional NWFilterField dstIpMask = 6;

  optional NWFilterField protocol = 7;

  optional NWFilterRuleCommonPort nWFilterRuleCommonPort = 8;

  optional NWFilterField dscp = 9;

  optional string comment = 10;
}

// +gogo:genproto=true
message NWFilterRuleIPv6 {
  optional string match = 1;

  optional NWFilterRuleCommonMAC nWFilterRuleCommonMAC = 2;

  optional NWFilterField srcIpAddr = 3;

  optional NWFilterField srcIpMask = 4;

  optional NWFilterField dstIpAddr = 5;

  optional NWFilterField dstIpMask = 6;

  optional NWFilterField protocol = 7;

  optional NWFilterRuleCommonPort nWFilterRuleCommonPort = 8;

  optional NWFilterField type = 9;

  optional NWFilterField typeEnd = 10;

  optional NWFilterField code = 11;

  optional NWFilterField codeEnd = 12;

  optional string comment = 13;
}

// +gogo:genproto=true
message NWFilterRuleMAC {
  optional string match = 1;

  optional NWFilterRuleCommonMAC nWFilterRuleCommonMAC = 2;

  optional NWFilterField protocolId = 3;

  optional string comment = 4;
}

// +gogo:genproto=true
message NWFilterRuleRARP {
  optional string match = 1;

  optional NWFilterRuleCommonMAC nWFilterRuleCommonMAC = 2;

  optional NWFilterField hwType = 3;

  optional NWFilterField protocolType = 4;

  optional NWFilterField opCode = 5;

  optional NWFilterField arpSrcMacAddr = 6;

  optional NWFilterField arpDstMacAddr = 7;

  optional NWFilterField arpSrcIpAddr = 8;

  optional NWFilterField arpSrcIpMask = 9;

  optional NWFilterField arpDstIpAddr = 10;

  optional NWFilterField arpDstIpMask = 11;

  optional NWFilterField gratuitous = 12;

  optional string comment = 13;
}

// +gogo:genproto=true
message NWFilterRuleSCTP {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional NWFilterRuleCommonPort nWFilterRuleCommonPort = 3;

  optional string comment = 4;
}

// +gogo:genproto=true
message NWFilterRuleSCTPIPv6 {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional NWFilterRuleCommonPort nWFilterRuleCommonPort = 3;

  optional string comment = 4;
}

// +gogo:genproto=true
message NWFilterRuleSTP {
  optional NWFilterField match = 1;

  optional NWFilterField srcMacAddr = 2;

  optional NWFilterField srcMacMask = 3;

  optional NWFilterField type = 4;

  optional NWFilterField flags = 5;

  optional NWFilterField rootPriority = 6;

  optional NWFilterField rootPriorityHi = 7;

  optional NWFilterField rootAddress = 8;

  optional NWFilterField rootAddressMask = 9;

  optional NWFilterField rootCost = 10;

  optional NWFilterField rootCostHi = 11;

  optional NWFilterField senderPriority = 12;

  optional NWFilterField senderPriorityHi = 13;

  optional NWFilterField senderAddress = 14;

  optional NWFilterField senderAddressMask = 15;

  optional NWFilterField port = 16;

  optional NWFilterField portHi = 17;

  optional NWFilterField age = 18;

  optional NWFilterField ageHi = 19;

  optional NWFilterField maxAge = 20;

  optional NWFilterField maxAgeHi = 21;

  optional NWFilterField helloTime = 22;

  optional NWFilterField helloTimeHi = 23;

  optional NWFilterField forwardDelay = 24;

  optional NWFilterField forwardDelayHi = 25;

  optional string comment = 26;
}

// +gogo:genproto=true
message NWFilterRuleTCP {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional NWFilterRuleCommonPort nWFilterRuleCommonPort = 3;

  optional NWFilterField option = 4;

  optional NWFilterField flags = 5;

  optional string comment = 6;
}

// +gogo:genproto=true
message NWFilterRuleTCPIPv6 {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional NWFilterRuleCommonPort nWFilterRuleCommonPort = 3;

  optional NWFilterField option = 4;

  optional string comment = 5;
}

// +gogo:genproto=true
message NWFilterRuleUDP {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional NWFilterRuleCommonPort nWFilterRuleCommonPort = 3;

  optional string comment = 4;
}

// +gogo:genproto=true
message NWFilterRuleUDPIPv6 {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional NWFilterRuleCommonPort nWFilterRuleCommonPort = 3;

  optional string comment = 4;
}

// +gogo:genproto=true
message NWFilterRuleUDPLite {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional string comment = 3;
}

// +gogo:genproto=true
message NWFilterRuleUDPLiteIPv6 {
  optional string match = 1;

  optional NWFilterRuleCommonIP nWFilterRuleCommonIP = 2;

  optional string comment = 3;
}

// +gogo:genproto=true
message NWFilterRuleVLAN {
  optional string match = 1;

  optional NWFilterRuleCommonMAC nWFilterRuleCommonMAC = 2;

  optional NWFilterField vlanid = 3;

  optional NWFilterField encapProtocol = 4;

  optional string comment = 5;
}

// +gogo:genproto=true
message Network {
  optional string ipv6 = 1;

  optional string trustGuestRxFilters = 2;

  optional string name = 3;

  optional string uuid = 4;

  optional NetworkMetadata metadata = 5;

  optional NetworkForward forward = 6;

  optional NetworkBridge bridge = 7;

  optional NetworkMTU mtu = 8;

  optional NetworkMAC mac = 9;

  optional NetworkDomain domain = 10;

  optional NetworkDNS dns = 11;

  optional NetworkVLAN vlan = 12;

  optional NetworkBandwidth bandwidth = 13;

  optional NetworkPortOptions portOptions = 14;

  repeated NetworkIP ip = 15;

  repeated NetworkRoute route = 16;

  optional NetworkVirtualPort virtualPort = 17;

  repeated NetworkPortGroup portGroup = 18;

  optional NetworkDnsmasqOptions dnsmasqOptions = 19;
}

// +gogo:genproto=true
message NetworkBandwidth {
  optional uint64 classId = 1;

  optional NetworkBandwidthParams inbound = 2;

  optional NetworkBandwidthParams outbound = 3;
}

// +gogo:genproto=true
message NetworkBandwidthParams {
  optional uint64 average = 1;

  optional uint64 peak = 2;

  optional uint64 burst = 3;

  optional uint64 floor = 4;
}

// +gogo:genproto=true
message NetworkBootp {
  optional string file = 1;

  optional string server = 2;
}

// +gogo:genproto=true
message NetworkBridge {
  optional string name = 1;

  optional string stp = 2;

  optional string delay = 3;

  optional string macTableManager = 4;

  optional string zone = 5;
}

// +gogo:genproto=true
message NetworkDHCP {
  repeated NetworkDHCPRange range = 1;

  repeated NetworkDHCPHost host = 2;

  repeated NetworkBootp bootp = 3;
}

// +gogo:genproto=true
message NetworkDHCPHost {
  optional string id = 1;

  optional string mac = 2;

  optional string name = 3;

  optional string ip = 4;

  optional NetworkDHCPLease lease = 5;
}

// +gogo:genproto=true
message NetworkDHCPLease {
  optional uint64 expiry = 1;

  optional string unit = 2;
}

// +gogo:genproto=true
message NetworkDHCPRange {
  optional string start = 1;

  optional string end = 2;

  optional NetworkDHCPLease lease = 3;
}

// +gogo:genproto=true
message NetworkDNS {
  optional string enable = 1;

  optional string forwardPlainNames = 2;

  repeated NetworkDNSForwarder forwarders = 3;

  repeated NetworkDNSTXT txt = 4;

  repeated NetworkDNSHost host = 5;

  repeated NetworkDNSSRV srv = 6;
}

// +gogo:genproto=true
message NetworkDNSForwarder {
  optional string domain = 1;

  optional string addr = 2;
}

// +gogo:genproto=true
message NetworkDNSHost {
  optional string ip = 1;

  repeated NetworkDNSHostHostname hostnames = 2;
}

// +gogo:genproto=true
message NetworkDNSHostHostname {
  optional string hostname = 1;
}

// +gogo:genproto=true
message NetworkDNSSRV {
  optional string service = 1;

  optional string protocol = 2;

  optional string target = 3;

  optional uint64 port = 4;

  optional uint64 priority = 5;

  optional uint64 weight = 6;

  optional string domain = 7;
}

// +gogo:genproto=true
message NetworkDNSTXT {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message NetworkDnsmasqOption {
  optional string value = 1;
}

// +gogo:genproto=true
message NetworkDnsmasqOptions {
  repeated NetworkDnsmasqOption option = 1;
}

// +gogo:genproto=true
message NetworkDomain {
  optional string name = 1;

  optional string localOnly = 2;
}

// +gogo:genproto=true
message NetworkForward {
  optional string mode = 1;

  optional string dev = 2;

  optional string managed = 3;

  optional NetworkForwardDriver driver = 4;

  repeated NetworkForwardPF pf = 5;

  optional NetworkForwardNAT nat = 6;

  repeated NetworkForwardInterface interface = 7;

  repeated NetworkForwardAddress address = 8;
}

// +gogo:genproto=true
message NetworkForwardAddress {
  optional NetworkForwardAddressPCI pci = 1;
}

// +gogo:genproto=true
message NetworkForwardAddressPCI {
  optional uint64 domain = 1;

  optional uint64 bus = 2;

  optional uint64 slot = 3;

  optional uint64 function = 4;
}

// +gogo:genproto=true
message NetworkForwardDriver {
  optional string name = 1;
}

// +gogo:genproto=true
message NetworkForwardInterface {
  optional string dev = 1;
}

// +gogo:genproto=true
message NetworkForwardNAT {
  optional string ipv6 = 1;

  repeated NetworkForwardNATAddress address = 2;

  repeated NetworkForwardNATPort ports = 3;
}

// +gogo:genproto=true
message NetworkForwardNATAddress {
  optional string start = 1;

  optional string end = 2;
}

// +gogo:genproto=true
message NetworkForwardNATPort {
  optional uint64 start = 1;

  optional uint64 end = 2;
}

// +gogo:genproto=true
message NetworkForwardPF {
  optional string dev = 1;
}

// +gogo:genproto=true
message NetworkIP {
  optional string address = 1;

  optional string family = 2;

  optional string netmask = 3;

  optional uint64 prefix = 4;

  optional string localPtr = 5;

  optional NetworkDHCP dhcp = 6;

  optional NetworkTFTP tftp = 7;
}

// +gogo:genproto=true
message NetworkMAC {
  optional string address = 1;
}

// +gogo:genproto=true
message NetworkMTU {
  optional uint64 size = 1;
}

// +gogo:genproto=true
message NetworkMetadata {
  optional string xML = 1;
}

// +gogo:genproto=true
message NetworkPort {
  optional string uuid = 1;

  optional NetworkPortOwner owner = 2;

  optional NetworkPortMAC mac = 3;

  optional string group = 4;

  optional NetworkBandwidth bandwidth = 5;

  optional NetworkPortVLAN vlan = 6;

  optional NetworkPortPortOptions portOptions = 7;

  optional NetworkVirtualPort virtualPort = 8;

  optional NetworkPortRXFilters rxFilters = 9;

  optional NetworkPortPlug plug = 10;
}

// +gogo:genproto=true
message NetworkPortGroup {
  optional string name = 1;

  optional string default = 2;

  optional string trustGuestRxFilters = 3;

  optional NetworkVLAN vlan = 4;

  optional NetworkVirtualPort virtualPort = 5;
}

// +gogo:genproto=true
message NetworkPortMAC {
  optional string address = 1;
}

// +gogo:genproto=true
message NetworkPortOptions {
  optional string isolated = 1;
}

// +gogo:genproto=true
message NetworkPortOwner {
  optional string uuid = 1;

  optional string name = 2;
}

// +gogo:genproto=true
message NetworkPortPlug {
  optional NetworkPortPlugBridge bridge = 1;

  optional NetworkPortPlugNetwork network = 2;

  optional NetworkPortPlugDirect direct = 3;

  optional NetworkPortPlugHostDevPCI hostDevPCI = 4;
}

// +gogo:genproto=true
message NetworkPortPlugBridge {
  optional string bridge = 1;

  optional string macTableManager = 2;
}

// +gogo:genproto=true
message NetworkPortPlugDirect {
  optional string dev = 1;

  optional string mode = 2;
}

// +gogo:genproto=true
message NetworkPortPlugHostDevPCI {
  optional string managed = 1;

  optional NetworkPortPlugHostDevPCIDriver driver = 2;

  optional NetworkPortPlugHostDevPCIAddress address = 3;
}

// +gogo:genproto=true
message NetworkPortPlugHostDevPCIAddress {
  optional uint64 domain = 1;

  optional uint64 bus = 2;

  optional uint64 slot = 3;

  optional uint64 function = 4;
}

// +gogo:genproto=true
message NetworkPortPlugHostDevPCIDriver {
  optional string name = 1;
}

// +gogo:genproto=true
message NetworkPortPlugNetwork {
  optional string bridge = 1;

  optional string macTableManager = 2;
}

// +gogo:genproto=true
message NetworkPortPortOptions {
  optional string isolated = 1;
}

// +gogo:genproto=true
message NetworkPortRXFilters {
  optional string trustGuest = 1;
}

// +gogo:genproto=true
message NetworkPortVLAN {
  optional string trunk = 1;

  repeated NetworkPortVLANTag tags = 2;
}

// +gogo:genproto=true
message NetworkPortVLANTag {
  optional uint64 id = 1;

  optional string nativeMode = 2;
}

// +gogo:genproto=true
message NetworkRoute {
  optional string family = 1;

  optional string address = 2;

  optional string netmask = 3;

  optional uint64 prefix = 4;

  optional string gateway = 5;

  optional string metric = 6;
}

// +gogo:genproto=true
message NetworkTFTP {
  optional string root = 1;
}

// +gogo:genproto=true
message NetworkVLAN {
  optional string trunk = 1;

  repeated NetworkVLANTag tag = 2;
}

// +gogo:genproto=true
message NetworkVLANTag {
  optional uint64 id = 1;

  optional string nativeMode = 2;
}

// +gogo:genproto=true
message NetworkVirtualPort {
  optional NetworkVirtualPortParams parameters = 1;
}

// +gogo:genproto=true
message NetworkVirtualPortParams {
  optional NetworkVirtualPortParamsAny any = 1;

  optional NetworkVirtualPortParamsVEPA8021QBG vepa8021QBG = 2;

  optional NetworkVirtualPortParamsVNTag8021QBH vntag8011QBH = 3;

  optional NetworkVirtualPortParamsOpenVSwitch openvswitch = 4;

  optional NetworkVirtualPortParamsMidoNet midoNet = 5;
}

// +gogo:genproto=true
message NetworkVirtualPortParamsAny {
  optional uint64 managerId = 1;

  optional uint64 typeId = 2;

  optional uint64 typeIdVersion = 3;

  optional string instanceId = 4;

  optional string profileId = 5;

  optional string interfaceId = 6;
}

// +gogo:genproto=true
message NetworkVirtualPortParamsMidoNet {
  optional string interfaceId = 1;
}

// +gogo:genproto=true
message NetworkVirtualPortParamsOpenVSwitch {
  optional string interfaceId = 1;

  optional string profileId = 2;
}

// +gogo:genproto=true
message NetworkVirtualPortParamsVEPA8021QBG {
  optional uint64 managerId = 1;

  optional uint64 typeId = 2;

  optional uint64 typeIdVersion = 3;

  optional string instanceId = 4;
}

// +gogo:genproto=true
message NetworkVirtualPortParamsVNTag8021QBH {
  optional string profileId = 1;
}

// +gogo:genproto=true
message NodeDevice {
  optional string name = 1;

  optional string path = 2;

  repeated NodeDeviceDevNode devnodes = 3;

  optional string parent = 4;

  optional NodeDeviceDriver driver = 5;

  optional NodeDeviceCapability capability = 6;
}

// +gogo:genproto=true
message NodeDeviceAPCardCapability {
  optional string apAdapter = 1;
}

// +gogo:genproto=true
message NodeDeviceAPMatrixCapability {
  repeated NodeDeviceAPMatrixSubCapability capabilities = 1;
}

// +gogo:genproto=true
message NodeDeviceAPMatrixMDevTypesCapability {
  repeated NodeDeviceMDevType types = 1;
}

// +gogo:genproto=true
message NodeDeviceAPMatrixSubCapability {
  optional NodeDeviceAPMatrixMDevTypesCapability mDevTypes = 1;
}

// +gogo:genproto=true
message NodeDeviceAPQueueCapability {
  optional string apAdapter = 1;

  optional string apDomain = 2;
}

// +gogo:genproto=true
message NodeDeviceCCWCapability {
  optional uint64 cssid = 1;

  optional uint64 ssid = 2;

  optional uint64 devno = 3;
}

// +gogo:genproto=true
message NodeDeviceCSSCapability {
  optional uint64 cssid = 1;

  optional uint64 ssid = 2;

  optional uint64 devno = 3;

  repeated NodeDeviceCSSSubCapability capabilities = 4;
}

// +gogo:genproto=true
message NodeDeviceCSSMDevTypesCapability {
  repeated NodeDeviceMDevType types = 1;
}

// +gogo:genproto=true
message NodeDeviceCSSSubCapability {
  optional NodeDeviceCSSMDevTypesCapability mDevTypes = 1;
}

// +gogo:genproto=true
message NodeDeviceCapability {
  optional NodeDeviceSystemCapability system = 1;

  optional NodeDevicePCICapability pci = 2;

  optional NodeDeviceUSBCapability usb = 3;

  optional NodeDeviceUSBDeviceCapability usbDevice = 4;

  optional NodeDeviceNetCapability net = 5;

  optional NodeDeviceSCSIHostCapability scsiHost = 6;

  optional NodeDeviceSCSITargetCapability scsiTarget = 7;

  optional NodeDeviceSCSICapability scsi = 8;

  optional NodeDeviceStorageCapability storage = 9;

  optional NodeDeviceDRMCapability drm = 10;

  optional NodeDeviceCCWCapability ccw = 11;

  optional NodeDeviceMDevCapability mDev = 12;

  optional NodeDeviceCSSCapability css = 13;

  optional NodeDeviceAPQueueCapability apQueue = 14;

  optional NodeDeviceAPCardCapability apCard = 15;

  optional NodeDeviceAPMatrixCapability apMatrix = 16;
}

// +gogo:genproto=true
message NodeDeviceDRMCapability {
  optional string type = 1;
}

// +gogo:genproto=true
message NodeDeviceDevNode {
  optional string type = 1;

  optional string path = 2;
}

// +gogo:genproto=true
message NodeDeviceDriver {
  optional string name = 1;
}

// +gogo:genproto=true
message NodeDeviceIDName {
  optional string id = 1;

  optional string name = 2;
}

// +gogo:genproto=true
message NodeDeviceIOMMUGroup {
  optional int64 number = 1;

  repeated NodeDevicePCIAddress address = 2;
}

// +gogo:genproto=true
message NodeDeviceMDevCapability {
  optional NodeDeviceMDevCapabilityType type = 1;

  optional NodeDeviceIOMMUGroup iommuGroup = 2;

  optional string uuid = 3;

  repeated NodeDeviceMDevCapabilityAttrs attrs = 4;
}

// +gogo:genproto=true
message NodeDeviceMDevCapabilityAttrs {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message NodeDeviceMDevCapabilityType {
  optional string id = 1;
}

// +gogo:genproto=true
message NodeDeviceMDevType {
  optional string id = 1;

  optional string name = 2;

  optional string deviceAPI = 3;

  optional uint64 availableInstances = 4;
}

// +gogo:genproto=true
message NodeDeviceNUMA {
  optional int64 node = 1;
}

// +gogo:genproto=true
message NodeDeviceNet80203Capability {
}

// +gogo:genproto=true
message NodeDeviceNet80211Capability {
}

// +gogo:genproto=true
message NodeDeviceNetCapability {
  optional string interface = 1;

  optional string address = 2;

  optional NodeDeviceNetLink link = 3;

  repeated NodeDeviceNetOffloadFeatures features = 4;

  repeated NodeDeviceNetSubCapability capability = 5;
}

// +gogo:genproto=true
message NodeDeviceNetLink {
  optional string state = 1;

  optional string speed = 2;
}

// +gogo:genproto=true
message NodeDeviceNetOffloadFeatures {
  optional string name = 1;
}

// +gogo:genproto=true
message NodeDeviceNetSubCapability {
  optional NodeDeviceNet80211Capability wireless80211 = 1;

  optional NodeDeviceNet80203Capability ethernet80203 = 2;
}

// +gogo:genproto=true
message NodeDevicePCIAddress {
  optional uint64 domain = 1;

  optional uint64 bus = 2;

  optional uint64 slot = 3;

  optional uint64 function = 4;
}

// +gogo:genproto=true
message NodeDevicePCIBridgeCapability {
}

// +gogo:genproto=true
message NodeDevicePCICapability {
  optional string class = 1;

  optional uint64 domain = 2;

  optional uint64 bus = 3;

  optional uint64 slot = 4;

  optional uint64 function = 5;

  optional NodeDeviceIDName product = 6;

  optional NodeDeviceIDName vendor = 7;

  optional NodeDeviceIOMMUGroup iommuGroup = 8;

  optional NodeDeviceNUMA numa = 9;

  optional NodeDevicePCIExpress pciExpress = 10;

  repeated NodeDevicePCISubCapability capabilities = 11;
}

// +gogo:genproto=true
message NodeDevicePCIExpress {
  repeated NodeDevicePCIExpressLink links = 1;
}

// +gogo:genproto=true
message NodeDevicePCIExpressLink {
  optional string validity = 1;

  optional double speed = 2;

  optional uint64 port = 3;

  optional uint64 width = 4;
}

// +gogo:genproto=true
message NodeDevicePCIMDevTypesCapability {
  repeated NodeDeviceMDevType types = 1;
}

// +gogo:genproto=true
message NodeDevicePCIPhysFunctionCapability {
  optional NodeDevicePCIAddress address = 1;
}

// +gogo:genproto=true
message NodeDevicePCISubCapability {
  optional NodeDevicePCIVirtFunctionsCapability virtFunctions = 1;

  optional NodeDevicePCIPhysFunctionCapability physFunction = 2;

  optional NodeDevicePCIMDevTypesCapability mDevTypes = 3;

  optional NodeDevicePCIBridgeCapability bridge = 4;
}

// +gogo:genproto=true
message NodeDevicePCIVirtFunctionsCapability {
  repeated NodeDevicePCIAddress address = 1;

  optional int64 maxCount = 2;
}

// +gogo:genproto=true
message NodeDeviceSCSICapability {
  optional int64 host = 1;

  optional int64 bus = 2;

  optional int64 target = 3;

  optional int64 lun = 4;

  optional string type = 5;
}

// +gogo:genproto=true
message NodeDeviceSCSIFCHostCapability {
  optional string wwnn = 1;

  optional string wwpn = 2;

  optional string fabricWwn = 3;
}

// +gogo:genproto=true
message NodeDeviceSCSIFCRemotePortCapability {
  optional string rport = 1;

  optional string wwpn = 2;
}

// +gogo:genproto=true
message NodeDeviceSCSIHostCapability {
  optional uint64 host = 1;

  optional uint64 uniqueId = 2;

  repeated NodeDeviceSCSIHostSubCapability capability = 3;
}

// +gogo:genproto=true
message NodeDeviceSCSIHostSubCapability {
  optional NodeDeviceSCSIVPortOpsCapability vportops = 1;

  optional NodeDeviceSCSIFCHostCapability fchost = 2;
}

// +gogo:genproto=true
message NodeDeviceSCSITargetCapability {
  optional string target = 1;

  repeated NodeDeviceSCSITargetSubCapability capability = 2;
}

// +gogo:genproto=true
message NodeDeviceSCSITargetSubCapability {
  optional NodeDeviceSCSIFCRemotePortCapability fcRemotePort = 1;
}

// +gogo:genproto=true
message NodeDeviceSCSIVPortOpsCapability {
  optional int64 vports = 1;

  optional int64 maxvports = 2;
}

// +gogo:genproto=true
message NodeDeviceStorageCapability {
  optional string block = 1;

  optional string bus = 2;

  optional string driverType = 3;

  optional string model = 4;

  optional string vendor = 5;

  optional string serial = 6;

  optional uint64 size = 11;

  optional uint64 logicalBlockSize = 8;

  optional uint64 numBlocks = 9;

  repeated NodeDeviceStorageSubCapability capability = 10;
}

// +gogo:genproto=true
message NodeDeviceStorageRemovableCapability {
  optional uint64 mediaAvailable = 1;

  optional uint64 mediaSize = 2;

  optional string mediaLabel = 3;

  optional uint64 logicalBlockSize = 4;

  optional uint64 numBlocks = 5;
}

// +gogo:genproto=true
message NodeDeviceStorageSubCapability {
  optional NodeDeviceStorageRemovableCapability removable = 1;
}

// +gogo:genproto=true
message NodeDeviceSystemCapability {
  optional string product = 1;

  optional NodeDeviceSystemHardware hardware = 2;

  optional NodeDeviceSystemFirmware firmware = 3;
}

// +gogo:genproto=true
message NodeDeviceSystemFirmware {
  optional string vendor = 1;

  optional string version = 2;

  optional string releaseData = 3;
}

// +gogo:genproto=true
message NodeDeviceSystemHardware {
  optional string vendor = 1;

  optional string version = 2;

  optional string serial = 3;

  optional string uuid = 4;
}

// +gogo:genproto=true
message NodeDeviceUSBCapability {
  optional int64 number = 1;

  optional int64 class = 2;

  optional int64 subclass = 3;

  optional int64 protocol = 4;

  optional string description = 5;
}

// +gogo:genproto=true
message NodeDeviceUSBDeviceCapability {
  optional int64 bus = 1;

  optional int64 device = 2;

  optional NodeDeviceIDName product = 3;

  optional NodeDeviceIDName vendor = 4;
}

// +gogo:genproto=true
message Secret {
  optional string ephemeral = 1;

  optional string private = 2;

  optional string description = 3;

  optional string uuid = 4;

  optional SecretUsage usage = 5;
}

// +gogo:genproto=true
message SecretUsage {
  optional string type = 1;

  optional string volume = 2;

  optional string name = 3;

  optional string target = 4;
}

// +gogo:genproto=true
message StorageEncryption {
  optional string format = 1;

  optional StorageEncryptionSecret secret = 2;

  optional StorageEncryptionCipher cipher = 3;

  optional StorageEncryptionIvgen ivgen = 4;
}

// +gogo:genproto=true
message StorageEncryptionCipher {
  optional string name = 1;

  optional uint64 size = 5;

  optional string mode = 3;

  optional string hash = 4;
}

// +gogo:genproto=true
message StorageEncryptionIvgen {
  optional string name = 1;

  optional string hash = 2;
}

// +gogo:genproto=true
message StorageEncryptionSecret {
  optional string type = 1;

  optional string uuid = 2;
}

// +gogo:genproto=true
message StoragePool {
  optional string type = 1;

  optional string name = 2;

  optional string uUID = 3;

  optional StoragePoolSize allocation = 4;

  optional StoragePoolSize capacity = 5;

  optional StoragePoolSize available = 6;

  optional StoragePoolFeatures features = 7;

  optional StoragePoolTarget target = 8;

  optional StoragePoolSource source = 9;

  optional StoragePoolRefresh refresh = 10;

  //  Pool backend namespcaes must be last
  optional StoragePoolFSCommandline fSCommandline = 11;

  optional StoragePoolRBDCommandline rBDCommandline = 12;
}

// +gogo:genproto=true
message StoragePoolFSCommandline {
  repeated StoragePoolFSCommandlineOption options = 1;
}

// +gogo:genproto=true
message StoragePoolFSCommandlineOption {
  optional string name = 1;
}

// +gogo:genproto=true
message StoragePoolFeatureCOW {
  optional string state = 1;
}

// +gogo:genproto=true
message StoragePoolFeatures {
  optional StoragePoolFeatureCOW cow = 1;
}

// +gogo:genproto=true
message StoragePoolPCIAddress {
  optional uint64 domain = 1;

  optional uint64 bus = 2;

  optional uint64 slot = 3;

  optional uint64 function = 4;
}

// +gogo:genproto=true
message StoragePoolRBDCommandline {
  repeated StoragePoolRBDCommandlineOption options = 1;
}

// +gogo:genproto=true
message StoragePoolRBDCommandlineOption {
  optional string name = 1;

  optional string value = 2;
}

// +gogo:genproto=true
message StoragePoolRefresh {
  optional StoragePoolRefreshVol volume = 1;
}

// +gogo:genproto=true
message StoragePoolRefreshVol {
  optional string allocation = 1;
}

// +gogo:genproto=true
message StoragePoolSize {
  optional string unit = 1;

  optional uint64 value = 2;
}

// +gogo:genproto=true
message StoragePoolSource {
  optional string name = 1;

  optional StoragePoolSourceDir dir = 2;

  repeated StoragePoolSourceHost host = 3;

  repeated StoragePoolSourceDevice device = 4;

  optional StoragePoolSourceAuth auth = 5;

  optional StoragePoolSourceVendor vendor = 6;

  optional StoragePoolSourceProduct product = 7;

  optional StoragePoolSourceFormat format = 8;

  optional StoragePoolSourceProtocol protocol = 9;

  optional StoragePoolSourceAdapter adapter = 10;

  optional StoragePoolSourceInitiator initiator = 11;
}

// +gogo:genproto=true
message StoragePoolSourceAdapter {
  optional string type = 1;

  optional string name = 2;

  optional string parent = 3;

  optional string managed = 4;

  optional string wwnn = 5;

  optional string wwpn = 6;

  optional StoragePoolSourceAdapterParentAddr parentAddr = 7;
}

// +gogo:genproto=true
message StoragePoolSourceAdapterParentAddr {
  optional uint64 uniqueId = 1;

  optional StoragePoolPCIAddress address = 2;
}

// +gogo:genproto=true
message StoragePoolSourceAuth {
  optional string type = 1;

  optional string username = 2;

  optional StoragePoolSourceAuthSecret secret = 3;
}

// +gogo:genproto=true
message StoragePoolSourceAuthSecret {
  optional string usage = 1;

  optional string uuid = 2;
}

// +gogo:genproto=true
message StoragePoolSourceDevice {
  optional string path = 1;

  optional string part_separator = 2;

  repeated StoragePoolSourceDeviceFreeExtent freeExtents = 3;
}

// +gogo:genproto=true
message StoragePoolSourceDeviceFreeExtent {
  optional uint64 start = 1;

  optional uint64 end = 2;
}

// +gogo:genproto=true
message StoragePoolSourceDir {
  optional string path = 1;
}

// +gogo:genproto=true
message StoragePoolSourceFormat {
  optional string type = 1;
}

// +gogo:genproto=true
message StoragePoolSourceHost {
  optional string name = 1;

  optional string port = 2;
}

// +gogo:genproto=true
message StoragePoolSourceInitiator {
  optional StoragePoolSourceInitiatorIQN iqn = 1;
}

// +gogo:genproto=true
message StoragePoolSourceInitiatorIQN {
  optional string name = 1;
}

// +gogo:genproto=true
message StoragePoolSourceProduct {
  optional string name = 1;
}

// +gogo:genproto=true
message StoragePoolSourceProtocol {
  optional string version = 1;
}

// +gogo:genproto=true
message StoragePoolSourceVendor {
  optional string name = 1;
}

// +gogo:genproto=true
message StoragePoolTarget {
  optional string path = 1;

  optional StoragePoolTargetPermissions permissions = 2;

  optional StoragePoolTargetTimestamps timestamps = 3;

  optional StorageEncryption encryption = 4;
}

// +gogo:genproto=true
message StoragePoolTargetPermissions {
  optional string owner = 1;

  optional string group = 2;

  optional string mode = 3;

  optional string label = 4;
}

// +gogo:genproto=true
message StoragePoolTargetTimestamps {
  optional string atime = 1;

  optional string mtime = 2;

  optional string ctime = 3;
}

// +gogo:genproto=true
message StorageVolume {
  optional string type = 1;

  optional string name = 2;

  optional string key = 3;

  optional StorageVolumeSize allocation = 4;

  optional StorageVolumeSize capacity = 5;

  optional StorageVolumeSize physical = 6;

  optional StorageVolumeTarget target = 7;

  optional StorageVolumeBackingStore backingStore = 8;
}

// +gogo:genproto=true
message StorageVolumeBackingStore {
  optional string path = 1;

  optional StorageVolumeTargetFormat format = 2;

  optional StorageVolumeTargetPermissions permissions = 3;
}

// +gogo:genproto=true
message StorageVolumeSize {
  optional string unit = 1;

  optional uint64 value = 2;
}

// +gogo:genproto=true
message StorageVolumeTarget {
  optional string path = 1;

  optional StorageVolumeTargetFormat format = 2;

  optional StorageVolumeTargetPermissions permissions = 3;

  optional StorageVolumeTargetTimestamps timestamps = 4;

  optional string compat = 5;

  optional Empty nocow = 6;

  repeated StorageVolumeTargetFeature features = 7;

  optional StorageEncryption encryption = 8;
}

// +gogo:genproto=true
message StorageVolumeTargetFeature {
  optional Empty lazyRefcounts = 1;
}

// +gogo:genproto=true
message StorageVolumeTargetFormat {
  optional string type = 1;
}

// +gogo:genproto=true
message StorageVolumeTargetPermissions {
  optional string owner = 1;

  optional string group = 2;

  optional string mode = 3;

  optional string label = 4;
}

// +gogo:genproto=true
message StorageVolumeTargetTimestamps {
  optional string atime = 1;

  optional string mtime = 2;

  optional string ctime = 3;
}

